{"version":3,"sources":["actions/user_actions.js","actions/types.js","components/utils/misc.js","components/Header_footer/Header/index.js","components/Header_footer/Footer/index.js","actions/site_actions.js","hoc/layout.js","hoc/auth.js","components/utils/button.js","components/Home/home_slider.js","components/Home/home_promotion.js","components/utils/card.js","components/utils/card_block.js","actions/products_actions.js","components/Home/index.js","components/utils/Form/formfield.js","components/utils/Form/formActions.js","components/Register_login/login.js","components/Register_login/index.js","components/Register_login/register.js","components/utils/page_top.js","components/utils/Form/fixed_categories.js","components/utils/collapseCheckbox.js","components/utils/collapseRadio.js","components/utils/card_block_shop.js","components/Shop/loadmoreCards.js","components/Shop/index.js","components/Product/prodNfo.js","components/utils/lightbox.js","components/Product/prodImg.js","components/Product/index.js","hoc/user.js","components/utils/User/history_block.js","components/User/index.js","components/utils/Form/fileupload.js","components/User/Admin/add_product.js","components/User/Admin/manage_brands.js","components/User/Admin/manage_woods.js","components/User/Admin/manage_categories.js","components/utils/User/product_block.js","components/utils/paypal.js","components/User/cart.js","components/User/update_personal_nfo.js","components/User/update_profile.js","components/User/Admin/update_site_nfo.js","components/User/Admin/manage_site.js","routes.js","reducers/index.js","reducers/user_reducer.js","reducers/products_reducer.js","reducers/site_reducer.js","index.js"],"names":["registerUser","dataToSubmit","type","payload","axios","post","then","response","data","loginUser","auth","get","logoutUser","addToCart","_id","removeCartItem","id","cart","forEach","item","cartDetail","k","i","quantity","onSuccessBuy","updateUserData","Header","state","page","name","linkTo","public","user","logoutHandler","props","dispatch","success","history","push","cartLink","userData","className","key","length","to","defaultLink","onClick","showLinks","list","isAuth","map","this","Component","connect","withRouter","Footer","siteData","icon","faCompass","address","faPhone","phone","faClock","hours","faEnvelope","email","getSiteData","updateSiteData","Layout","Object","keys","site","children","ComposedClass","reload","adminRoute","AuthenticationCheck","loading","isAdmin","setState","CircularProgress","style","color","thickness","mapStateToProps","MyButton","template","altClass","addStyles","title","runAction","faShoppingBag","buttons","HomeSlider","slides","img","lineOne","lineTwo","linkTitle","settings","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","background","height","window","innerHeight","margin","HomePromotion","promotion","Card","images","url","grid","renderCardImage","brand","price","description","console","log","CardBlock","display","flexWrap","card","getProductsToShop","skip","limit","filters","previousState","request","newState","articles","size","addProduct","datatoSubmit","getBrands","addBrand","existingBrands","brands","addWood","existingWoods","woods","wood","getWoods","Home","products","bySell","byArrival","Formfield","formdata","change","showError","errorMessage","validation","valid","validationMessage","formTemplate","element","showlabel","config","label","value","onBlur","event","blur","onChange","options","renderTemplate","update","formName","newFormdata","newElement","target","validData","error","test","message","confirm","trim","required","validate","touched","generateData","isFormValid","formIsValid","populateOptionFields","arrayData","field","newArray","resetFields","populateFields","formData","fields","Login","formError","formSuccess","placeholder","password","updateForm","submitForm","preventDefault","loginSuccess","onSubmit","RegisterLogin","Register","lastname","confirmPassword","setTimeout","catch","e","Dialog","open","PageTop","frets","CollapseCheckbox","checked","handleClick","handleAngle","faAngleUp","faAngleDown","renderList","ListItem","padding","ListItemText","primary","ListItemSecondaryAction","Checkbox","handleToggle","indexOf","currentIndex","newChecked","splice","handleFilters","initState","List","borderBottom","Collapse","in","timeout","unmountOnExit","component","disablePadding","CollapseRadio","FormControlLabel","control","Radio","handleChange","RadioGroup","aria-label","CardBlockShop","LoadmoreCards","loadMore","Shop","handlePrice","array","parseInt","category","newFilters","priceValues","showFilteredResults","loadMoreCards","toShop","handleGrid","faTh","faBars","clear","toShopSize","ProdNfo","detail","shipping","faTruck","available","faCheck","faTimes","showProdTags","showProdActions","showProdSpecifications","ImageLightBox","lightboxIsOpen","currentImage","pos","gotoPrevious","gotoNext","closeLightbox","onclose","mainSrc","src","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","ProdImg","lightbox","imagePos","lightboxImages","handleLightBox","handleLightBoxClose","showThumbs","ProductPage","match","params","getProductDetail","prodDetail","width","addToCartHandler","links","admin","generateLinks","UserHistoryBlock","product","moment","dateOfPurchase","format","UserDashboard","Fileupload","onDrop","files","uploading","FormData","append","header","uploadedFiles","imagesHandler","onRemove","filter","public_id","showUploadedImages","multiple","getRootProps","getInputProps","faPlusCircle","textAlign","paddingTop","reset","AddProduct","publish","updateFields","resetFieldHandler","newFormData","ManageBrands","showCategoryItems","resetFieldsHandler","ManageWoods","ManageCategories","UserProductBlock","removeItem","Paypal","total","toPay","env","client","sandbox","production","currency","onError","err","JSON","stringify","onSuccess","payment","onCancel","shape","UserCart","showTotal","showSuccess","calculateTotal","removeFromCart","showNoItemMessage","faFrown","transactionError","transactionCanceled","transactionSuccess","paymentData","successBuy","cartItems","userCart","getCartItems","faSmile","UpdatePersonalNfo","updateUser","UpdateProfile","UpdateSiteNfo","ManageSite","Routes","path","exact","Auth","rootReducer","combineReducers","action","register","loginSucces","siteInfo","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"wRAiBO,SAASA,EAAaC,GAIzB,MAAO,CACHC,KCrBqB,gBDsBrBC,QALYC,IAAMC,KAAN,UEjBO,aFiBP,aAAqCJ,GAChDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS5B,SAASC,EAAUR,GAItB,MAAO,CACHC,KCjCkB,aDkClBC,QALYC,IAAMC,KAAN,UE5BO,aF4BP,UAAkCJ,GACrCK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQpC,SAASE,IAKZ,MAAO,CACHR,KC1CiB,YD2CjBC,QALYC,IAAMO,IAAN,UEvCO,aFuCP,UACfL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAUxB,SAASI,IAKZ,MAAO,CACHV,KCtDmB,cDuDnBC,QALYC,IAAMO,IAAN,UEpDO,aFoDP,YACfL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SASxB,SAASK,EAAUC,GAKtB,MAAO,CACHZ,KCjEwB,mBDkExBC,QALYC,IAAMC,KAAN,UEhEO,aFgEP,gCAAkDS,IACjER,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgCxB,SAASO,EAAeC,GAe3B,MAAO,CACHd,KC5G6B,wBD6G7BC,QAfYC,IAAMO,IAAN,UEnGO,aFmGP,+BAA+CK,IAC9CV,MAAK,SAAAC,GASE,OAPJA,EAASC,KAAKS,KAAKC,SAAQ,SAAAC,GACvBZ,EAASC,KAAKY,WAAWF,SAAQ,SAACG,EAAEC,GAC7BH,EAAKH,KAAOK,EAAEP,MACbP,EAASC,KAAKY,WAAWE,GAAGC,SAAWJ,EAAKI,gBAI7ChB,EAASC,SAYrC,SAASgB,EAAahB,GAIzB,MAAO,CACHN,KCxH2B,sBDyH3BC,QALYC,IAAMC,KAAN,UE1HO,aF0HP,eAAuCG,GACtCF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQxC,SAASiB,EAAexB,GAM3B,MAAO,CACHC,KCnIwB,mBDoIxBC,QAPYC,IAAMC,KAAN,UEpIO,aFoIP,mBAA2CJ,GAC1CK,MAAK,SAAAC,GACF,OAAOA,EAASC,S,IGjIlCkB,E,4MAEFC,MAAQ,CACJC,KAAK,CACD,CACIC,KAAK,OACLC,OAAO,IACPC,QAAQ,GAEZ,CACIF,KAAK,WACLC,OAAO,QACPC,QAAQ,IAGhBC,KAAK,CACD,CACIH,KAAK,UACLC,OAAO,aACPC,QAAQ,GAEZ,CACIF,KAAK,aACLC,OAAO,kBACPC,QAAQ,GAEZ,CACIF,KAAK,SACLC,OAAO,kBACPC,QAAQ,GAEZ,CACIF,KAAK,UACLC,OAAO,eACPC,QAAQ,K,EAMpBE,cAAgB,WACZ,EAAKC,MAAMC,SAASvB,KAAcN,MAAK,SAAAC,GAChCA,EAASJ,QAAQiC,SAChB,EAAKF,MAAMG,QAAQC,KAAK,S,EAMpCC,SAAW,SAACpB,EAAKG,GACb,IAAMU,EAAO,EAAKE,MAAMF,KAAKQ,SAE7B,OACI,yBAAKC,UAAU,YAAYC,IAAKpB,GAC5B,8BAAOU,EAAKf,KAAOe,EAAKf,KAAK0B,OAAO,GACpC,kBAAC,IAAD,CAAMC,GAAIzB,EAAKW,QACVX,EAAKU,Q,EAOtBgB,YAAc,SAAC1B,EAAKG,GAAN,MACI,YAAdH,EAAKU,KACD,yBAAKY,UAAU,eACXC,IAAKpB,EACLwB,QAAS,kBAAK,EAAKb,kBAElBd,EAAKU,MAId,kBAAC,IAAD,CAAMe,GAAIzB,EAAKW,OAAQY,IAAKpB,GACvBH,EAAKU,O,EAKdkB,UAAY,SAAC7C,GACT,IAAI8C,EAAO,GAgBX,OAdG,EAAKd,MAAMF,KAAKQ,UACftC,EAAKgB,SAAQ,SAACC,GACN,EAAKe,MAAMF,KAAKQ,SAASS,OAKR,WAAd9B,EAAKU,MACJmB,EAAKV,KAAKnB,IALK,IAAhBA,EAAKY,QACJiB,EAAKV,KAAKnB,MAUnB6B,EAAKE,KAAI,SAAC/B,EAAKG,GAClB,MAAiB,YAAdH,EAAKU,KACG,EAAKgB,YAAY1B,EAAKG,GAEtB,EAAKiB,SAASpB,EAAKG,O,uDAQlC,OACI,4BAAQmB,UAAU,eACd,yBAAKA,UAAU,aACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QAAf,YAIJ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,OACVU,KAAKJ,UAAUI,KAAKxB,MAAMK,OAE/B,yBAAKS,UAAU,UACVU,KAAKJ,UAAUI,KAAKxB,MAAMC,c,GAzHlCwB,aAwINC,mBANf,SAAyB1B,GACrB,MAAO,CACHK,KAAML,EAAMK,QAILqB,CAAyBC,YAAW5B,I,4EChEpC6B,EArEA,SAAC,GAAY,IAAX/C,EAAU,EAAVA,KACb,OACIA,EAAKgD,SACL,4BAAQf,UAAU,cACd,yBAAKA,UAAU,aACX,yBAAKA,UAAU,QAAf,mBAGA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,QACX,mDACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,CACIgB,KAAMC,IACNjB,UAAU,SAEd,yBAAKA,UAAU,OACX,wCACA,6BAAMjC,EAAKgD,SAAS,GAAGG,WAG/B,yBAAKlB,UAAU,OACX,kBAAC,IAAD,CACIgB,KAAMG,IACNnB,UAAU,SAEd,yBAAKA,UAAU,OACX,sCACA,6BAAMjC,EAAKgD,SAAS,GAAGK,SAG/B,yBAAKpB,UAAU,OACX,kBAAC,IAAD,CACIgB,KAAMK,IACNrB,UAAU,SAEd,yBAAKA,UAAU,OACX,8CACA,6BAAMjC,EAAKgD,SAAS,GAAGO,SAG/B,yBAAKtB,UAAU,OACX,kBAAC,IAAD,CACIgB,KAAMO,IACNvB,UAAU,SAEd,yBAAKA,UAAU,OACX,sCACA,6BAAMjC,EAAKgD,SAAS,GAAGS,WAKvC,yBAAKxB,UAAU,QACX,oDACA,6BACI,kHAQnB,MClEF,SAASyB,IAKZ,MAAO,CACHhE,KJSqB,gBIRrBC,QALYC,IAAMO,IAAN,UHPO,YGOP,eACCL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SASxC,SAAS2D,EAAelE,GAI3B,MAAO,CACHC,KJDwB,mBIExBC,QALYC,IAAMC,KAAN,UHlBO,YGkBP,cAAuCJ,GAClDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,ICd7B4D,E,kLAI6C,IAAxCC,OAAOC,KAAKnB,KAAKjB,MAAMqC,MAAM5B,QAC5BQ,KAAKjB,MAAMC,SAAS+B,O,+BAKxB,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKzB,UAAU,kBACVU,KAAKjB,MAAMsC,UAEhB,kBAAC,EAAD,CAAQhE,KAAM2C,KAAKjB,MAAMqC,Y,GAhBpBnB,aA4BNC,eANS,SAAC1B,GACrB,MAAO,CACH4C,KAAM5C,EAAM4C,QAILlB,CAAyBe,G,SC/BzB,WAASK,EAAcC,GAA0B,IAAnBC,EAAkB,uDAAL,KAChDC,EADqD,4MAGvDjD,MAAQ,CACJkD,SAAS,GAJ0C,kEAOnC,IAAD,OACf1B,KAAKjB,MAAMC,SAASzB,KAAQJ,MAAK,SAAAC,GAC7B,IAAIyB,EAAO,EAAKE,MAAMF,KAAKQ,SAEvBR,EAAKiB,QAKF0B,IAAe3C,EAAK8C,UAGL,IAAXJ,IAFH,EAAKxC,MAAMG,QAAQC,KAAK,mBALzBoC,GACC,EAAKxC,MAAMG,QAAQC,KAAK,mBAWhC,EAAKyC,SAAS,CAACF,SAAQ,SAxBwB,+BA8BnD,OAAG1B,KAAKxB,MAAMkD,QAEN,yBAAKpC,UAAU,eACX,kBAACuC,EAAA,EAAD,CAAkBC,MAAO,CAACC,MAAM,WAAYC,UAAW,KAKhE,kBAACV,EAAD,iBAAmBtB,KAAKjB,MAAxB,CAA+BF,KAAMmB,KAAKjB,MAAMF,YAtCA,GACzBoB,aA0ClC,SAASgC,EAAgBzD,GACrB,MAAO,CACHK,KAAML,EAAMK,MAIpB,OAAOqB,YAAQ+B,EAAR/B,CAAyBuB,I,kCCOrBS,EAtDE,SAACnD,GA+Cd,OACI,yBAAKO,UAAU,WA9CH,WACZ,IAAI6C,EAAW,GAEf,OAAOpD,EAAMhC,MACT,IAAK,UACDoF,EAAW,kBAAC,IAAD,eACP7C,UAAYP,EAAMqD,SAA2BrD,EAAMqD,SAAtB,eAC7B3C,GAAIV,EAAMJ,QACNI,EAAMsD,WAETtD,EAAMuD,OAEf,MACA,IAAK,WACDH,EACI,yBAAK7C,UAAU,WACXK,QAAS,WACLZ,EAAMwD,cAGV,kBAAC,IAAD,CACIjC,KAAMkC,OAGtB,MACA,IAAK,mBACDL,EACI,yBAAK7C,UAAU,mBACXK,QAAS,WACLZ,EAAMwD,cAGV,kBAAC,IAAD,CACIjC,KAAMkC,MANd,eAUR,MACA,QACIL,EAAS,GAEjB,OAAOA,EAMDM,KC+BCC,EAnFI,SAAC3D,GAEhB,IAAM4D,EAAS,CACX,CACIC,IAAI,6BACJC,QAAQ,SACRC,QAAQ,cACRC,UAAU,WACVpE,OAAO,SAEX,CACIiE,IAAI,gCACJC,QAAQ,UACRC,QAAQ,oBACRC,UAAU,cACVpE,OAAO,SAEX,CACIiE,IAAI,6BACJC,QAAQ,UACRC,QAAQ,oBACRC,UAAU,cACVpE,OAAO,SAEX,CACIiE,IAAI,8BACJC,QAAQ,UACRC,QAAQ,oBACRC,UAAU,cACVpE,OAAO,UAITqE,EAAW,CACbC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,QAAQ,GAmCZ,OACI,yBAAKhE,UAAU,sBACX,kBAAC,IAAW0D,EAjChBL,EACIA,EAAO5C,KAAI,SAAC/B,EAAKG,GAAN,OACP,yBAAKoB,IAAKpB,GACN,yBAAKmB,UAAU,iBACXwC,MAAO,CACHyB,WAAW,OAAD,OAAQvF,EAAK4E,IAAb,KACVY,OAAO,GAAD,OAAIC,OAAOC,YAAX,QAGV,yBAAKpE,UAAU,mBACX,yBAAKA,UAAU,aAAatB,EAAK6E,SACjC,yBAAKvD,UAAU,iBAAiBtB,EAAK8E,SACrC,6BACI,kBAAC,EAAD,CACI/F,KAAK,UACLuF,MAAOtE,EAAK+E,UACZpE,OAAQX,EAAKW,OACb0D,UAAW,CACPsB,OAAO,uBAQtC,QC9BMC,EAxCO,SAAC7E,GAEnB,IAAM8E,EAAY,CACdjB,IAAI,0BACJC,QAAQ,gBACRC,QAAQ,0BACRC,UAAU,WACVpE,OAAO,SA0BX,OACI,yBAAKW,UAAU,kBAvBfuE,EACA,yBAAKvE,UAAU,qBACXwC,MAAO,CACHyB,WAAW,OAAD,OAAQM,EAAUjB,IAAlB,OAGV,yBAAKtD,UAAU,aAAauE,EAAUhB,SACtC,yBAAKvD,UAAU,iBAAiBuE,EAAUf,SAC1C,6BACI,kBAAC,EAAD,CACI/F,KAAK,UACLuF,MAAOuB,EAAUd,UACjBpE,OAAQkF,EAAUlF,OAClB0D,UAAW,CACPsB,OAAQ,kBAK3B,OC3BHG,E,8KAEcC,GACZ,OAAGA,EAAOvE,OAAS,EACRuE,EAAO,GAAGC,IAEV,mC,+BAKL,IAAD,OACCjF,EAAQiB,KAAKjB,MACnB,OACI,yBAAKO,UAAS,4BAAuBP,EAAMkF,OACvC,yBACI3E,UAAU,QACVwC,MAAO,CACHyB,WAAW,OAAD,OAAQvD,KAAKkE,gBAAgBnF,EAAMgF,QAAnC,iBAHlB,MAMI,yBAAKzE,UAAU,oBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,SAASP,EAAMoF,MAAMzF,MACpC,yBAAKY,UAAU,QAAQP,EAAML,MAC7B,yBAAKY,UAAU,QAAf,IAAwBP,EAAMqF,QAGpCrF,EAAMkF,KACJ,yBAAK3E,UAAU,eACX,2BACKP,EAAMsF,cAGd,KAEL,yBAAK/E,UAAU,WACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,CACIvC,KAAK,UACLqF,SAAS,YACTE,MAAM,eACN3D,OAAM,0BAAqBI,EAAMpB,KACjC0E,UAAW,CACPsB,OAAQ,iBAIpB,yBAAKrE,UAAU,gBACX,kBAAC,EAAD,CACIvC,KAAK,WACLwF,UAAW,WACPxD,EAAMF,KAAKQ,SAASS,OAChB,EAAKf,MAAMC,SAAStB,EAAUqB,EAAMpB,MAEpC2G,QAAQC,IAAI,iC,GAvDjCtE,aAwEJC,eANS,SAAC1B,GACrB,MAAO,CACHK,KAAML,EAAMK,QAILqB,CAAyB4D,GCtCzBU,EArCG,SAACzF,GAef,OACI,yBAAKO,UAAU,cACX,yBAAKA,UAAU,aAEPP,EAAMuD,MACF,yBAAKhD,UAAU,SACVP,EAAMuD,OAEd,KAEL,yBAAKR,MAAO,CACR2C,QAAQ,OACRC,SAAS,UAEK3F,EAAMc,KAzBhCd,EAAMc,KACFd,EAAMc,KAAKE,KAAI,SAAC4E,EAAKxG,GAAN,OACP,kBAAC,EAAD,eACIoB,IAAKpB,GACDwG,OAGnB,U,QCkDF,SAASC,EAAkBC,EAAMC,GAAuC,IAAjCC,EAAgC,uDAAvB,GAAIC,EAAmB,uDAAH,GACjE3H,EAAO,CACTyH,QACAD,OACAE,WAGEE,EAAUhI,IAAMC,KAAN,UXrEU,eWqEV,SAAoCG,GACvCF,MAAK,SAAAC,GACF,IAAI8H,EAAQ,sBACLF,GADK,YAEL5H,EAASC,KAAK8H,WAErB,MAAO,CACHC,KAAMhI,EAASC,KAAK+H,KACpBD,SAAUD,MAI9B,MAAO,CACHnI,KZnE4B,uBYoE5BC,QAASiI,GAKV,SAASI,GAAWC,GAKvB,MAAO,CACHvI,KZ9EmB,cY+EnBC,QALYC,IAAMC,KAAN,UX1FU,eW0FV,YAAuCoI,GACtCnI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAuBxC,SAASkI,KAKZ,MAAO,CACHxI,KZ7GkB,aY8GlBC,QALYC,IAAMO,IAAN,UXpHU,eWoHV,YACHL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SASpC,SAASmI,GAAS1I,EAAc2I,GAYnC,MAAO,CACH1I,KZ/HiB,YYgIjBC,QAbYC,IAAMC,KAAN,UX/HU,eW+HV,UAAqCJ,GACpDK,MAAK,SAAAC,GACF,IAAIsI,EAAM,sBACHD,GADG,CAENrI,EAASC,KAAK8G,QAElB,MAAO,CACHlF,QAAS7B,EAASC,KAAK4B,QACvByG,cAUL,SAASC,GAAQ7I,EAAc8I,GAYlC,MAAO,CACH7I,KZhJgB,WYiJhBC,QAbYC,IAAMC,KAAN,UXlJU,eWkJV,SAAoCJ,GACnDK,MAAK,SAAAC,GACF,IAAIyI,EAAK,sBACFD,GADE,CAELxI,EAASC,KAAKyI,OAElB,MAAO,CACH7G,QAAS7B,EAASC,KAAK4B,QACvB4G,aAWL,SAASE,KAIZ,MAAO,CACHhJ,KZ7JkB,YY8JlBC,QALYC,IAAMO,IAAN,UXtKU,eWsKV,WACfL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,ICjKzB2I,G,kLAEkB,IAAD,OACfhG,KAAKjB,MAAMC,SDoCR,CACHjC,KZrC4B,uBYsC5BC,QALYC,IAAMO,IAAN,UX1CU,eW0CV,6CACCL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UClCEF,MAAK,WAC1CmH,QAAQC,IAAI,EAAKxF,UAErBiB,KAAKjB,MAAMC,SD4CR,CACHjC,KZ/C+B,0BYgD/BC,QALYC,IAAMO,IAAN,UXrDU,eWqDV,kDACfL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,Y,+BCtCvB,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CACIwC,KAAMG,KAAKjB,MAAMkH,SAASC,OAC1B5D,MAAM,0BAEV,kBAAC,EAAD,MACA,kBAAC,EAAD,CACIzC,KAAMG,KAAKjB,MAAMkH,SAASE,UAC1B7D,MAAM,sB,GApBPrC,aAiCJC,gBANS,SAAC1B,GACrB,MAAO,CACHyH,SAAUzH,EAAMyH,YAIT/F,CAAyB8F,IC0DzBI,GAjGG,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,OAAQzI,EAAQ,EAARA,GAG5B0I,EAAY,WACd,IAAIC,EAAe,KAUnB,OARGH,EAASI,aAAeJ,EAASK,QAChCF,EACI,yBAAKlH,UAAU,eACV+G,EAASM,oBAKfH,GA4EX,OACI,6BAzEmB,WACnB,IAAII,EAAe,KAEnB,OAAOP,EAASQ,SACZ,IAAK,QACDD,EACI,yBAAKtH,UAAU,aACT+G,EAASS,UACP,yBAAKxH,UAAU,gBAAgB+G,EAASU,OAAOC,OAClD,KAED,2CACQX,EAASU,OADjB,CAEIE,MAAOZ,EAASY,MAChBC,OAAQ,SAACC,GAAD,OAAUb,EAAO,CAACa,QAAMtJ,KAAGuJ,MAAK,KACxCC,SAAU,SAACF,GAAD,OAAUb,EAAO,CAACa,QAAMtJ,WAErC0I,KAGb,MACA,IAAK,SACDK,EACI,yBAAKtH,UAAU,aACT+G,EAASS,UACP,yBAAKxH,UAAU,gBAAgB+G,EAASU,OAAOC,OAClD,KACD,4BACIC,MAAOZ,EAASY,MAChBC,OAAQ,SAACC,GAAD,OAAUb,EAAO,CAACa,QAAMtJ,KAAGuJ,MAAK,KACxCC,SAAU,SAACF,GAAD,OAAUb,EAAO,CAACa,QAAMtJ,SAElC,4BAAQoJ,MAAM,IAAd,cAEIZ,EAASU,OAAOO,QAAQvH,KAAI,SAAA/B,GAAI,OAC5B,4BACIuB,IAAKvB,EAAKuB,IACV0H,MAAOjJ,EAAKuB,KAEXvB,EAAKiJ,WAKrBV,KAGb,MACA,IAAK,WACLK,EACI,yBAAKtH,UAAU,aACT+G,EAASS,UACP,yBAAKxH,UAAU,gBAAgB+G,EAASU,OAAOC,OAClD,KACD,8CACQX,EAASU,OADjB,CAEIE,MAAOZ,EAASY,MAChBC,OAAQ,SAACC,GAAD,OAAUb,EAAO,CAACa,QAAMtJ,KAAGuJ,MAAK,KACxCC,SAAU,SAACF,GAAD,OAAUb,EAAO,CAACa,QAAMtJ,WAErC0I,KAGT,MACA,QACIK,EAAe,KAGvB,OAAOA,EAMFW,K,QCnEAC,GAAS,SAACX,EAASR,EAAUoB,GACtC,IAAMC,EAAW,gBACVrB,GAEDsB,EAAU,gBACTD,EAAYb,EAAQhJ,KAK3B,GAFA8J,EAAWV,MAAQJ,EAAQM,MAAMS,OAAOX,MAErCJ,EAAQO,KAAK,CACZ,IAAIS,EApCY,SAAChB,GAA2B,IAAlBR,EAAiB,uDAAP,GACpCyB,EAAQ,EAAC,EAAK,IAGlB,GAAGjB,EAAQJ,WAAW3F,MAAM,CACxB,IAAM4F,EAAQ,eAAeqB,KAAKlB,EAAQI,OACpCe,EAAO,UAAOtB,EAAgC,GAAxB,yBAC5BoB,EAASpB,EAA0BoB,EAAlB,CAACpB,EAAMsB,GAG5B,GAAGnB,EAAQJ,WAAWwB,QAAQ,CAC1B,IAAMvB,EAAQG,EAAQI,MAAMiB,SAAW7B,EAASQ,EAAQJ,WAAWwB,SAAShB,MACtEe,EAAO,UAAOtB,EAAiC,GAAzB,0BAC5BoB,EAASpB,EAA0BoB,EAAlB,CAACpB,EAAMsB,GAG5B,GAAGnB,EAAQJ,WAAW0B,SAAS,CAC3B,IAAMzB,EAAiC,KAAzBG,EAAQI,MAAMiB,OACtBF,EAAO,UAAOtB,EAAiC,GAAzB,0BAC5BoB,EAASpB,EAA0BoB,EAAlB,CAACpB,EAAMsB,GAG5B,OAAOF,EAcaM,CAAST,EAAWtB,GACpCsB,EAAWjB,MAAQmB,EAAU,GAC7BF,EAAWhB,kBAAoBkB,EAAU,GAM7C,OAHAF,EAAWU,QAAUxB,EAAQO,KAC7BM,EAAYb,EAAQhJ,IAAM8J,EAEnBD,GAGEY,GAAe,SAACjC,EAAUoB,GACnC,IAAI3K,EAAe,GAEnB,IAAI,IAAIyC,KAAO8G,EACA,oBAAR9G,IACCzC,EAAayC,GAAO8G,EAAS9G,GAAK0H,OAI1C,OAAOnK,GAGEyL,GAAc,SAAClC,EAAUoB,GAClC,IAAIe,GAAc,EAElB,IAAI,IAAIjJ,KAAO8G,EACXmC,EAAcnC,EAAS9G,GAAKmH,OAAS8B,EAEzC,OAAOA,GAGEC,GAAsB,SAACpC,GAAmC,IAAzBqC,EAAwB,uDAAb,GAAGC,EAAU,uCAC5DC,EAAW,GACXlB,EAAW,gBAAOrB,GAOxB,OALAqC,EAAU3K,SAAQ,SAAAC,GACd4K,EAASzJ,KAAK,CAACI,IAAIvB,EAAKL,IAAIsJ,MAAMjJ,EAAKU,UAG3CgJ,EAAYiB,GAAO5B,OAAOO,QAAUsB,EAC7BlB,GAGEmB,GAAc,SAACxC,EAAUoB,GAClC,IAAMC,EAAW,gBAAOrB,GAExB,IAAI,IAAI9G,KAAOmI,EAEPA,EAAYnI,GAAK0H,MADV,WAAR1H,EAC0B,GAEA,GAG7BmI,EAAYnI,GAAKmH,OAAQ,EACzBgB,EAAYnI,GAAK8I,SAAU,EAC3BX,EAAYnI,GAAKoH,kBAAoB,GAGzC,OAAOe,GAGEoB,GAAiB,SAACC,EAAUC,GAErC,IAAI,IAAIzJ,KAAOwJ,EACXA,EAASxJ,GAAK0H,MAAQ+B,EAAOzJ,GAC7BwJ,EAASxJ,GAAKmH,OAAQ,EACtBqC,EAASxJ,GAAK8I,SAAU,EACxBU,EAASxJ,GAAKoH,kBAAoB,GAGtC,OAAOoC,GCrGLE,G,4MAEFzK,MAAQ,CACJ0K,WAAW,EACXC,YAAY,GACZ9C,SAAS,CACLvF,MAAO,CACH+F,QAAS,QACTI,MAAO,GACPF,OAAO,CACHrI,KAAM,cACN3B,KAAM,QACNqM,YAAa,oBAEjB3C,WAAW,CACP0B,UAAU,EACVrH,OAAO,GAEX4F,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,IAEtB0C,SAAU,CACNxC,QAAS,QACTI,MAAO,GACPF,OAAO,CACHrI,KAAM,iBACN3B,KAAM,WACNqM,YAAa,uBAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,M,EAK9B2C,WAAa,SAACzC,GACV,IAAMa,EAAcF,GAAOX,EAAQ,EAAKrI,MAAM6H,UAC9C,EAAKzE,SAAS,CACVsH,WAAW,EACX7C,SAAUqB,K,EAKlB6B,WAAY,SAACpC,GACTA,EAAMqC,iBAEN,IAAI1M,EAAewL,GAAa,EAAK9J,MAAM6H,UACzBkC,GAAY,EAAK/J,MAAM6H,UAGrC,EAAKtH,MAAMC,SAAS1B,EAAUR,IAAeK,MAAK,SAAAC,GAC3CA,EAASJ,QAAQyM,cAChBnF,QAAQC,IAAInH,EAASJ,SACrB,EAAK+B,MAAMG,QAAQC,KAAK,oBAExB,EAAKyC,SAAS,CACVsH,WAAW,OAMvB,EAAKtH,SAAS,CACVsH,WAAW,K,uDAMb,IAAD,OACL,OACI,yBAAK5J,UAAU,kBACX,0BAAMoK,SAAU,SAACvC,GAAD,OAAU,EAAKoC,WAAWpC,KAEtC,kBAAC,GAAD,CACItJ,GAAI,QACJwI,SAAUrG,KAAKxB,MAAM6H,SAASvF,MAC9BwF,OAAQ,SAACO,GAAD,OAAY,EAAKyC,WAAWzC,MAGxC,kBAAC,GAAD,CACIhJ,GAAI,WACJwI,SAAUrG,KAAKxB,MAAM6H,SAASgD,SAC9B/C,OAAQ,SAACO,GAAD,OAAY,EAAKyC,WAAWzC,MAGtC7G,KAAKxB,MAAM0K,UACT,yBAAK5J,UAAU,eAAf,0BAGH,KACD,4BAAQK,QAAS,SAACwH,GAAD,OAAU,EAAKoC,WAAWpC,KAA3C,gB,GAjGAlH,aA4GLC,iBAAUC,YAAW8I,KCpFrBU,GA5BO,WAClB,OACI,yBAAKrK,UAAU,gBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,QACX,6CACA,uQACA,kBAAC,EAAD,CACIvC,KAAK,UACLuF,MAAM,oBACN3D,OAAO,YACP0D,UAAW,CACPsB,OAAO,iBAInB,yBAAKrE,UAAU,SACX,oDACA,oEACA,kBAAC,GAAD,W,UChBlBsK,G,4MAEFpL,MAAQ,CACJ0K,WAAW,EACXC,aAAY,EACZ9C,SAAS,CACL3H,KAAM,CACFmI,QAAS,QACTI,MAAO,GACPF,OAAO,CACHrI,KAAM,aACN3B,KAAM,OACNqM,YAAa,mBAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,IAEtBkD,SAAU,CACNhD,QAAS,QACTI,MAAO,GACPF,OAAO,CACHrI,KAAM,iBACN3B,KAAM,OACNqM,YAAa,uBAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,IAEtB7F,MAAO,CACH+F,QAAS,QACTI,MAAO,GACPF,OAAO,CACHrI,KAAM,cACN3B,KAAM,QACNqM,YAAa,oBAEjB3C,WAAW,CACP0B,UAAU,EACVrH,OAAO,GAEX4F,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,IAEtB0C,SAAU,CACNxC,QAAS,QACTI,MAAO,GACPF,OAAO,CACHrI,KAAM,iBACN3B,KAAM,WACNqM,YAAa,uBAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,IAEtBmD,gBAAiB,CACbjD,QAAS,QACTI,MAAO,GACPF,OAAO,CACHrI,KAAM,yBACN3B,KAAM,WACNqM,YAAa,yBAEjB3C,WAAW,CACP0B,UAAU,EACVF,QAAS,YAEbvB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,M,EAK9B2C,WAAa,SAACzC,GACV,IAAMa,EAAcF,GAAOX,EAAQ,EAAKrI,MAAM6H,UAC9C,EAAKzE,SAAS,CACVsH,WAAW,EACX7C,SAAUqB,K,EAIlB6B,WAAY,SAACpC,GACTA,EAAMqC,iBAEN,IAAI1M,EAAewL,GAAa,EAAK9J,MAAM6H,UACzBkC,GAAY,EAAK/J,MAAM6H,UAGrC,EAAKtH,MAAMC,SAASnC,EAAaC,IAChCK,MAAK,SAAAC,GACCA,EAASJ,QAAQiC,SAChB,EAAK2C,SAAS,CACVsH,WAAW,EACXC,aAAa,IAEjBY,YAAW,WACP,EAAKhL,MAAMG,QAAQC,KAAK,qBAC1B,MAEF,EAAKyC,SAAS,CAACsH,WAAW,OAE/Bc,OAAM,SAAAC,GACL,EAAKrI,SAAS,CAACsH,WAAW,OAG9B,EAAKtH,SAAS,CACVsH,WAAW,K,uDAKb,IAAD,OACL,OACI,yBAAK5J,UAAU,gBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,QACX,0BAAMoK,SAAU,SAACvC,GAAD,OAAW,EAAKoC,WAAWpC,KAC3C,oDACI,yBAAK7H,UAAU,kBACX,yBAAKA,UAAU,SACX,kBAAC,GAAD,CACIzB,GAAI,OACJwI,SAAUrG,KAAKxB,MAAM6H,SAAS3H,KAC9B4H,OAAQ,SAACO,GAAD,OAAY,EAAKyC,WAAWzC,OAG5C,yBAAKvH,UAAU,SACX,kBAAC,GAAD,CACIzB,GAAI,WACJwI,SAAUrG,KAAKxB,MAAM6H,SAASwD,SAC9BvD,OAAQ,SAACO,GAAD,OAAY,EAAKyC,WAAWzC,QAIhD,6BACI,kBAAC,GAAD,CACIhJ,GAAI,QACJwI,SAAUrG,KAAKxB,MAAM6H,SAASvF,MAC9BwF,OAAQ,SAACO,GAAD,OAAY,EAAKyC,WAAWzC,OAG5C,+CACA,yBAAKvH,UAAU,kBACX,yBAAKA,UAAU,SACX,kBAAC,GAAD,CACIzB,GAAI,WACJwI,SAAUrG,KAAKxB,MAAM6H,SAASgD,SAC9B/C,OAAQ,SAACO,GAAD,OAAY,EAAKyC,WAAWzC,OAG5C,yBAAKvH,UAAU,SACX,kBAAC,GAAD,CACIzB,GAAI,kBACJwI,SAAUrG,KAAKxB,MAAM6H,SAASyD,gBAC9BxD,OAAQ,SAACO,GAAD,OAAY,EAAKyC,WAAWzC,QAIhD,6BACM7G,KAAKxB,MAAM0K,UACT,yBAAK5J,UAAU,eAAf,0BAGH,KACD,4BAAQK,QAAS,SAACwH,GAAD,OAAU,EAAKoC,WAAWpC,KAA3C,0BASpB,kBAAC+C,GAAA,EAAD,CAAQC,KAAMnK,KAAKxB,MAAM2K,aACrB,yBAAK7J,UAAU,gBACX,mDACA,kG,GA9LDW,aA0MRC,iBAAU0J,ICtMVQ,GAVC,SAACrL,GACb,OACI,yBAAKO,UAAU,YACX,yBAAKA,UAAU,aACVP,EAAMuD,SCNjB+H,GAAQ,CACV,CACI,IAAO,GACP,KAAQ,IAEZ,CACI,IAAO,GACP,KAAQ,IAEZ,CACI,IAAO,GACP,KAAQ,IAEZ,CACI,IAAO,GACP,KAAQ,KAIVjG,GAAQ,CACV,CACI,IAAM,EACN,KAAO,MACP,MAAQ,IAEZ,CACI,IAAM,EACN,KAAO,aACP,MAAQ,CAAC,EAAE,MAEf,CACI,IAAM,EACN,KAAO,eACP,MAAQ,CAAC,IAAI,MAEjB,CACI,IAAM,EACN,KAAO,eACP,MAAQ,CAAC,IAAI,MAEjB,CACI,IAAM,EACN,KAAO,iBACP,MAAQ,CAAC,IAAK,OAElB,CACI,IAAM,EACN,KAAO,kBACP,MAAQ,CAAC,IAAK,Q,oGCyDPkG,G,4MA1FX9L,MAAQ,CACJ2L,MAAM,EACNI,QAAS,I,EAYbC,YAAc,WACV,EAAK5I,SAAS,CAACuI,MAAO,EAAK3L,MAAM2L,Q,EAGrCM,YAAc,kBACV,EAAKjM,MAAM2L,KACP,kBAAC,IAAD,CACI7J,KAAMoK,KACNpL,UAAU,SAGd,kBAAC,IAAD,CACIgB,KAAMqK,KACNrL,UAAU,U,EAItBsL,WAAa,kBACT,EAAK7L,MAAMc,KACP,EAAKd,MAAMc,KAAKE,KAAI,SAACkH,GAAD,OAChB,kBAAC4D,GAAA,EAAD,CAAUtL,IAAK0H,EAAMtJ,IAAKmE,MAAO,CAACgJ,QAAQ,WACtC,kBAACC,GAAA,EAAD,CAAcC,QAAS/D,EAAMvI,OAC7B,kBAACuM,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACInJ,MAAM,UACNsF,SAAU,EAAK8D,aAAalE,EAAMtJ,KAClC4M,SAAoD,IAA3C,EAAK/L,MAAM+L,QAAQa,QAAQnE,EAAMtJ,YAK7D,M,EAILwN,aAAe,SAAAlE,GAAK,OAAI,WAAO,IACnBsD,EAAY,EAAK/L,MAAjB+L,QACFc,EAAed,EAAQa,QAAQnE,GAC/BqE,EAAU,YAAOf,IAEF,IAAlBc,EACCC,EAAWnM,KAAK8H,GAEhBqE,EAAWC,OAAOF,EAAa,GAGnC,EAAKzJ,SAAS,CACV2I,QAASe,IACX,WACE,EAAKvM,MAAMyM,cAAcF,Q,kEAxD1BtL,KAAKjB,MAAM0M,WACVzL,KAAK4B,SAAS,CACVuI,KAAMnK,KAAKjB,MAAM0M,c,+BA4DzB,OACI,yBAAKnM,UAAU,0BACX,kBAACoM,GAAA,EAAD,CAAM5J,MAAO,CAAC6J,aAAc,sBACxB,kBAACd,GAAA,EAAD,CAAUlL,QAASK,KAAKwK,YAAa1I,MAAO,CAACgJ,QAAQ,qBACjD,kBAACC,GAAA,EAAD,CACIC,QAAShL,KAAKjB,MAAMuD,MACpBhD,UAAU,mBAEbU,KAAKyK,eAEV,kBAACmB,GAAA,EAAD,CAAUC,GAAI7L,KAAKxB,MAAM2L,KAAM2B,QAAQ,OAAOC,eAAa,GACvD,kBAACL,GAAA,EAAD,CAAMM,UAAU,MAAMC,gBAAc,GAC/BjM,KAAK4K,qB,GAnFH3K,a,8BCoFhBiM,G,4MAlFX1N,MAAQ,CACJ2L,MAAM,EACNlD,MAAM,K,EAYVuD,YAAc,WACV,EAAK5I,SAAS,CAACuI,MAAO,EAAK3L,MAAM2L,Q,EAGrCM,YAAc,kBACV,EAAKjM,MAAM2L,KACP,kBAAC,IAAD,CACI7J,KAAMoK,KACNpL,UAAU,SAGd,kBAAC,IAAD,CACIgB,KAAMqK,KACNrL,UAAU,U,EAItBsL,WAAa,kBACT,EAAK7L,MAAMc,KACP,EAAKd,MAAMc,KAAKE,KAAK,SAAAkH,GAAK,OACtB,kBAACkF,GAAA,EAAD,CACI5M,IAAK0H,EAAMtJ,IACXsJ,MAAK,UAAKA,EAAMtJ,KAChByO,QAAS,kBAACC,GAAA,EAAD,MACTrF,MAAOC,EAAMvI,UAGxB,M,EAIL4N,aAAe,SAAAnF,GACX,EAAKpI,MAAMyM,cAAcrE,EAAMS,OAAOX,OACtC,EAAKrF,SAAS,CAACqF,MAAOE,EAAMS,OAAOX,S,kEAzChCjH,KAAKjB,MAAM0M,WACVzL,KAAK4B,SAAS,CACVuI,KAAMnK,KAAKjB,MAAM0M,c,+BA4CzB,OACI,6BACK,kBAACC,GAAA,EAAD,CAAM5J,MAAO,CAAC6J,aAAc,sBACzB,kBAACd,GAAA,EAAD,CAAUlL,QAASK,KAAKwK,YAAa1I,MAAO,CAACgJ,QAAQ,qBACjD,kBAACC,GAAA,EAAD,CACIC,QAAShL,KAAKjB,MAAMuD,MACpBhD,UAAU,mBAEbU,KAAKyK,eAEV,kBAACmB,GAAA,EAAD,CAAUC,GAAI7L,KAAKxB,MAAM2L,KAAM2B,QAAQ,OAAOC,eAAa,GACvD,kBAACL,GAAA,EAAD,CAAMM,UAAU,MAAMC,gBAAc,GAEhC,kBAACM,GAAA,EAAD,CACIC,aAAW,SACX9N,KAAK,SACLuI,MAAOjH,KAAKxB,MAAMyI,MAClBI,SAAUrH,KAAKsM,cAEbtM,KAAK4K,sB,GAzEX3K,aCuBbwM,GAjCO,SAAC1N,GAcnB,OACI,yBAAKO,UAAU,mBACX,6BACI,6BACKP,EAAMc,MACmB,IAAtBd,EAAMc,KAAKL,OACP,yBAAKF,UAAU,aAAf,qBAIP,MACaP,EAAMc,KAtBhCd,EAAMc,KACFd,EAAMc,KAAKE,KAAI,SAAA4E,GAAI,OACf,kBAAC,EAAD,eACIpF,IAAKoF,EAAKhH,KACNgH,EAFR,CAGIV,KAAMlF,EAAMkF,WAGvB,UCcMyI,GAzBO,SAAC3N,GACnB,OACI,6BACI,6BACI,kBAAC,GAAD,CACIkF,KAAMlF,EAAMkF,KACZpE,KAAMd,EAAMkH,YAIhBlH,EAAMqG,KAAO,GAAKrG,EAAMqG,MAAQrG,EAAM+F,MAClC,yBAAKxF,UAAU,uBACX,0BAAMK,QAAS,kBAAKZ,EAAM4N,aAA1B,cAIP,O,wCCFXC,G,4MAEFpO,MAAQ,CACJyF,KAAK,GACLa,MAAM,EACND,KAAK,EACLE,QAAQ,CACJZ,MAAM,GACNkG,MAAM,GACNvE,KAAK,GACL1B,MAAM,K,EAedyI,YAAc,SAAC5F,GACX,IAAM5J,EAAO+G,GACT0I,EAAQ,GAEZ,IAAI,IAAIvN,KAAOlC,EACRA,EAAKkC,GAAK5B,MAAQoP,SAAS9F,EAAM,MAChC6F,EAAQzP,EAAKkC,GAAKuN,OAG1B,OAAOA,G,EAIXtB,cAAgB,SAACzG,EAAQiI,GACtB,IAAMC,EAAU,gBAAO,EAAKzO,MAAMuG,SAGjC,GAFDkI,EAAWD,GAAYjI,EAEN,UAAbiI,EAAqB,CACpB,IAAIE,EAAc,EAAKL,YAAY9H,GACnCkI,EAAWD,GAAYE,EAG5B,EAAKC,oBAAoBF,GACzB,EAAKrL,SAAS,CACVmD,QAASkI,K,EAIhBE,oBAAsB,SAACpI,GACnB,EAAKhG,MAAMC,SAAS4F,EAChB,EACA,EAAKpG,MAAMsG,MACXC,IACD5H,MAAK,WACJ,EAAKyE,SAAS,CACViD,KAAK,Q,EAKjBuI,cAAgB,WACZ,IAAIvI,EAAO,EAAKrG,MAAMqG,KAAO,EAAKrG,MAAMsG,MAExC,EAAK/F,MAAMC,SAAS4F,EAChBC,EACA,EAAKrG,MAAMsG,MACX,EAAKtG,MAAMuG,QACX,EAAKhG,MAAMkH,SAASoH,SACrBlQ,MAAK,WACJ,EAAKyE,SAAS,CACViD,a,EAKZyI,WAAY,WACR,EAAK1L,SAAS,CACVqC,KAAO,EAAKzF,MAAMyF,KAAmB,GAAZ,e,kEAnE7BjE,KAAKjB,MAAMC,SAASuG,MACpBvF,KAAKjB,MAAMC,SAAS+G,MAEpB/F,KAAKjB,MAAMC,SAAS4F,EAChB5E,KAAKxB,MAAMqG,KACX7E,KAAKxB,MAAMsG,MACX9E,KAAKxB,MAAMuG,Y,+BAkET,IAAD,OACCkB,EAAWjG,KAAKjB,MAAMkH,SAC5B,OACI,6BACI,kBAAC,GAAD,CACI3D,MAAM,oBAEV,yBAAKhD,UAAU,aACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,QACX,kBAAC,GAAD,CACImM,WAAW,EACXnJ,MAAM,SACNzC,KAAMoG,EAASP,OACf8F,cAAe,SAACzG,GAAD,OAAY,EAAKyG,cAAczG,EAAQ,YAEzD,kBAAC,GAAD,CACG0G,WAAW,EACXnJ,MAAM,QACNzC,KAAMwK,GACNmB,cAAe,SAACzG,GAAD,OAAY,EAAKyG,cAAczG,EAAQ,YAE1D,kBAAC,GAAD,CACI0G,WAAW,EACXnJ,MAAM,OACNzC,KAAMoG,EAASJ,MACf2F,cAAe,SAACzG,GAAD,OAAY,EAAKyG,cAAczG,EAAQ,WAEzD,kBAAC,GAAD,CACG0G,WAAW,EACXnJ,MAAM,QACNzC,KAAMuE,GACNoH,cAAe,SAACzG,GAAD,OAAY,EAAKyG,cAAczG,EAAQ,aAI9D,yBAAKzF,UAAU,SACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,oBACX,yBACIA,UAAS,mBAAcU,KAAKxB,MAAMyF,KAAK,GAAG,UAC1CtE,QAAS,kBAAK,EAAK2N,eAEnB,kBAAC,IAAD,CAAiBhN,KAAMiN,QAE3B,yBACIjO,UAAS,mBAAeU,KAAKxB,MAAMyF,KAAQ,SAAH,IACxCtE,QAAS,kBAAK,EAAK2N,eAEnB,kBAAC,IAAD,CAAiBhN,KAAMkN,UAInC,yBAAK1L,MAAO,CAAC2L,MAAM,SACf,kBAAC,GAAD,CACIxJ,KAAMjE,KAAKxB,MAAMyF,KACjBa,MAAO9E,KAAKxB,MAAMsG,MAClBM,KAAMa,EAASyH,WACfzH,SAAUA,EAASoH,OACnBV,SAAU,kBAAK,EAAKS,4B,GAlJrCnN,aAoKJC,gBANS,SAAC1B,GACrB,MAAO,CACHyH,SAAUzH,EAAMyH,YAIT/F,CAAyB0M,I,4DChGzBe,GA7EC,SAAC5O,GAEb,IA6DM6O,EAAS7O,EAAM6O,OACrB,OACI,6BACI,4BAAKA,EAAOzJ,MAAMzF,KAAlB,IAAyBkP,EAAOlP,MAChC,2BACKkP,EAAOvJ,aAlEC,SAACuJ,GAAD,OACjB,yBAAKtO,UAAU,gBACTsO,EAAOC,SACL,yBAAKvO,UAAU,OACX,6BAAK,kBAAC,IAAD,CAAiBgB,KAAMwN,QAC5B,yBAAKxO,UAAU,YACX,8CACA,6CAGX,KAECsO,EAAOG,UACL,yBAAKzO,UAAU,OACX,6BAAK,kBAAC,IAAD,CAAiBgB,KAAM0N,QAC5B,yBAAK1O,UAAU,YACX,0CACA,2CAIR,yBAAKA,UAAU,OACX,6BAAK,kBAAC,IAAD,CAAiBgB,KAAM2N,QAC5B,yBAAK3O,UAAU,YACX,8CACA,iDA2CV4O,CAAaN,GApCC,SAACA,GAAD,OACpB,yBAAKtO,UAAU,mBACX,yBAAKA,UAAU,SAAf,KAA2BsO,EAAOxJ,OAClC,yBAAK9E,UAAU,QACX,kBAAC,EAAD,CACIvC,KAAK,mBACLwF,UAAW,WACRxD,EAAMrB,UAAUkQ,EAAOjQ,UA8BhCwQ,CAAgBP,GAvBK,SAACA,GAAD,OAC3B,yBAAKtO,UAAU,0BACX,sCACA,6BACI,yBAAKA,UAAU,QACX,0CADJ,IAC6BsO,EAAOvD,OAEpC,yBAAK/K,UAAU,QACX,yCADJ,IAC4BsO,EAAO9H,KAAKpH,QAgB1C0P,CAAuBR,K,SCnBtBS,I,mNAtDX7P,MAAQ,CACJ8P,gBAAgB,EAChBC,aAAc,EAAKxP,MAAMyP,IACzBzK,OAAO,I,EAkBX0K,aAAe,WACX,EAAK7M,SAAS,CACV2M,aAAc,EAAK/P,MAAM+P,aAAc,K,EAI/CG,SAAW,WACP,EAAK9M,SAAS,CACV2M,aAAc,EAAK/P,MAAM+P,aAAc,K,EAI/CI,cAAgB,WACZ,EAAK5P,MAAM6P,W,uDAGL,IAAD,SAEyB5O,KAAKxB,MAA5B+P,EAFF,EAEEA,aAAaxK,EAFf,EAEeA,OAEpB,OACQ,kBAAC,KAAD,CACK8K,QAAS9K,EAAOwK,GAAcO,IAC9BC,QAAShL,EAAQwK,EAAiBxK,EAAOvE,OAAO,GAChDwP,QAASjL,EAAQwK,EAAiBxK,EAAOvE,OAAO,GAChDyP,eAAgB,kBAAI,EAAKN,iBACzBO,kBAAmB,kBAAK,EAAKT,gBAC7BU,kBAAmB,kBAAK,EAAKT,iB,gDA1Cd3P,GAC5B,GAAGA,EAAMgF,OAAO,CAEZ,IAAMA,EAAS,GAIf,OAHAhF,EAAMgF,OAAOhG,SAAQ,SAAA8I,GACjB9C,EAAO5E,KAAK,CAAC2P,IAAI,GAAD,OAAIjI,QAEjB,CACH9C,OAASA,GAGhB,OAAO,M,GAnBY9D,cC4FbmP,G,4MA3FX5Q,MAAQ,CACJ6Q,UAAU,EACVC,SAAS,EACTC,eAAe,I,EAoBnBC,eAAiB,SAAChB,GACX,EAAKhQ,MAAM+Q,eAAe/P,OAAS,GAClC,EAAKoC,SAAS,CACVyN,UAAU,EACVC,SAAUd,K,EAKtBiB,oBAAsB,WAClB,EAAK7N,SAAS,CACVyN,UAAU,K,EAKlBK,WAAa,kBACT,EAAKlR,MAAM+Q,eAAexP,KAAI,SAAC/B,EAAKG,GAAN,OAC1BA,EAAI,EACA,yBACIoB,IAAKpB,EACLwB,QAAS,kBAAK,EAAK6P,eAAerR,IAClCmB,UAAU,QACVwC,MAAO,CAACyB,WAAW,OAAD,OAASvF,EAAT,kBAEzB,S,EAKTkG,gBAAkB,SAACH,GACf,OAAGA,EAAOvE,OAAS,EACRuE,EAAO,GAAGC,IAEX,kC,kEAhDV,GAAGhE,KAAKjB,MAAM6O,OAAO7J,OAAOvE,OAAS,EAAE,CACnC,IAAI+P,EAAiB,GAErBvP,KAAKjB,MAAM6O,OAAO7J,OAAOhG,SAAQ,SAAAC,GAC7BuR,EAAepQ,KAAKnB,EAAKgG,QAG7BhE,KAAK4B,SAAS,CACV2N,sB,+BA4CF,IAAD,OACE3B,EAAU5N,KAAKjB,MAAf6O,OACP,OACI,yBAAKtO,UAAU,2BACX,yBAAKA,UAAU,YACX,yBACIwC,MAAO,CAACyB,WAAW,OAAD,OAAQvD,KAAKkE,gBAAgB0J,EAAO7J,QAApC,gBAClBpE,QAAS,kBAAK,EAAK6P,eAAe,OAI1C,yBAAKlQ,UAAU,eACTU,KAAK0P,WAAW9B,IAGlB5N,KAAKxB,MAAM6Q,SACP,kBAAC,GAAD,CACIxR,GAAI+P,EAAO/P,GACXkG,OAAQ/D,KAAKxB,MAAM+Q,eACnBpF,KAAMnK,KAAKxB,MAAM2L,KACjBqE,IAAKxO,KAAKxB,MAAM8Q,SAChBV,QAAS,kBAAK,EAAKa,yBAE1B,U,GAtFCxP,aCMhB0P,G,kLAEkB,IAAD,OACT9R,EAAKmC,KAAKjB,MAAM6Q,MAAMC,OAAOhS,GACnCmC,KAAKjB,MAAMC,SjBKZ,SAA0BnB,GAO7B,MAAO,CACHd,KZP0B,qBYQ1BC,QAPYC,IAAMO,IAAN,UXnBU,eWmBV,8BAAiDK,EAAjD,iBACfV,MAAK,SAAAC,GACF,OAAOA,EAASC,KAAK,OiBTDyS,CAAiBjS,IAAKV,MAAK,WACvC,EAAK4B,MAAMkH,SAAS8J,YACpB,EAAKhR,MAAMG,QAAQC,KAAK,U,6CAMhCa,KAAKjB,MAAMC,SjBaR,CACHjC,KZf4B,uBYgB5BC,QAAQ,O,uCiBXKa,GACbmC,KAAKjB,MAAMC,SAAStB,EAAUG,M,+BAGxB,IAAD,OACL,OACI,6BACI,kBAAC,GAAD,CACIyE,MAAM,mBAEV,yBAAKhD,UAAU,aAEXU,KAAKjB,MAAMkH,SAAS8J,WACpB,yBAAKzQ,UAAU,0BACX,yBAAKA,UAAU,QACX,yBAAKwC,MAAO,CAACkO,MAAM,UACf,kBAAC,GAAD,CACIpC,OAAQ5N,KAAKjB,MAAMkH,SAAS8J,eAIxC,yBAAKzQ,UAAU,SACX,kBAAC,GAAD,CACI5B,UAAW,SAACG,GAAD,OAAO,EAAKoS,iBAAiBpS,IACxC+P,OAAQ5N,KAAKjB,MAAMkH,SAAS8J,eAItC,gB,GA5CI9P,aA2DXC,gBANS,SAAC1B,GACrB,MAAO,CACHyH,SAAUzH,EAAMyH,YAIT/F,CAAyByP,ICjElCO,GAAQ,CACV,CACIxR,KAAM,aACNC,OAAQ,mBAEZ,CACID,KAAM,mBACNC,OAAQ,sBAEZ,CACID,KAAM,UACNC,OAAQ,eAIVwR,GAAQ,CACV,CACIzR,KAAM,YACNC,OAAQ,oBAEZ,CACID,KAAM,eACNC,OAAQ,sBAEZ,CACID,KAAM,oBACNC,OAAQ,6BAkDDuB,gBAPS,SAAC1B,GACrB,MAAO,CACHK,KAAML,EAAMK,QAKLqB,EA7CI,SAACnB,GAEhB,IAAMqR,EAAgB,SAACF,GAAD,OAClBA,EAAMnQ,KAAI,SAAC/B,EAAKG,GAAN,OACN,kBAAC,IAAD,CAAMsB,GAAIzB,EAAKW,OAAQY,IAAKpB,GACvBH,EAAKU,UAMlB,OACI,yBAAKY,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,iBACX,0CACA,yBAAKA,UAAU,SACT8Q,EAAcF,KAElBnR,EAAMF,KAAKQ,SAASsC,QAClB,6BACI,qCACA,yBAAKrC,UAAU,SACT8Q,EAAcD,MAG3B,MAIL,yBAAK7Q,UAAU,cACVP,EAAMsC,e,oBC5BZgP,GAnCU,SAACtR,GAgBtB,OACI,yBAAKO,UAAU,kBACX,+BACI,+BACI,4BACI,gDACA,uCACA,0CACA,0CAGR,+BAvBRP,EAAMkH,SACFlH,EAAMkH,SAASlG,KAAI,SAACuQ,EAAQnS,GAAT,OACf,wBAAIoB,IAAKpB,GACL,4BAAKoS,KAAOD,EAAQE,gBAAgBC,OAAO,eAC3C,4BAAKH,EAAQnM,MAAb,IAAqBmM,EAAQ5R,MAC7B,iCAAO4R,EAAQlM,OACf,4BAAKkM,EAAQlS,cAGxB,SC6BMsS,GAxCO,SAAC,GAAY,IAAX7R,EAAU,EAAVA,KACpB,OACI,kBAAC,GAAD,KACI,6BAEI,yBAAKS,UAAU,kBACX,gDACA,6BACI,8BAAOT,EAAKQ,SAASX,MACrB,8BAAOG,EAAKQ,SAASwK,UACrB,8BAAOhL,EAAKQ,SAASyB,QAEzB,kBAAC,EAAD,CACI/D,KAAK,UACLuF,MAAM,oBACN3D,OAAO,wBAKXE,EAAKQ,SAASH,QACd,yBAAKI,UAAU,kBACX,iDACA,yBAAKA,UAAU,8BACX,kBAAC,GAAD,CACI2G,SAAUpH,EAAKQ,SAASH,YAKnC,Q,8BCuFNyR,G,kDAjHX,aAAc,IAAD,8BACT,gBAOJC,OAAS,SAACC,GACP,EAAKjP,SAAS,CAACkP,WAAU,IACzB,IAAI/H,EAAW,IAAIgI,SAInBhI,EAASiI,OAAO,OAAOH,EAAM,IAE7B5T,IAAMC,KAAK,yBAAyB6L,EALrB,CACXkI,OAAQ,CAAC,eAAe,yBAK3B9T,MAAK,SAAAC,GAEDkH,QAAQC,IAAInH,EAASC,MAErB,EAAKuE,SAAS,CACVkP,WAAU,EACVI,cAAc,GAAD,mBACN,EAAK1S,MAAM0S,eADL,CAET9T,EAASC,SAEf,WACE,EAAK0B,MAAMoS,cAAc,EAAK3S,MAAM0S,sBA5BnC,EAiCbE,SAAW,SAACvT,GACRZ,IAAMO,IAAN,2CAA8CK,IAAMV,MAAK,SAAAC,GACrD,IAAI2G,EAAS,EAAKvF,MAAM0S,cAAcG,QAAO,SAAArT,GACzC,OAAOA,EAAKsT,YAAczT,KAG9B,EAAK+D,SAAS,CACVsP,cAAenN,IACjB,WACE,EAAKhF,MAAMoS,cAAcpN,UA1CxB,EA+CbwN,mBAAqB,kBACjB,EAAK/S,MAAM0S,cAAcnR,KAAI,SAAA/B,GAAI,OAC7B,yBAAKsB,UAAU,eACXC,IAAKvB,EAAKsT,UACV3R,QAAS,kBAAK,EAAKyR,SAASpT,EAAKsT,aAEjC,yBACIhS,UAAU,OACVwC,MAAO,CAACyB,WAAW,OAAD,OAAQvF,EAAKgG,IAAb,uBArD9B,EAAKxF,MAAQ,CACT0S,cAAc,GACdJ,WAAU,GAJL,E,qDAwEH,IAAD,OACL,OACI,6BACI,iCACI,yBAAKxR,UAAU,kBACX,kBAAC,KAAD,CACIsR,OAAQ,SAAC3G,GAAD,OAAK,EAAK2G,OAAO3G,IACzBuH,UAAU,EACVlS,UAAU,iBAET,gBAAEmS,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACG,wBAAUD,IAEN,0BAAWC,KACX,kBAAC,IAAD,CAAiBpS,UAAU,OAASgB,KAAMqR,WAKpD3R,KAAKuR,qBAEHvR,KAAKxB,MAAMsS,UACX,yBAAKxR,UAAU,eAAewC,MAAO,CACjC8P,UAAW,SACXC,WAAY,SAEZ,kBAAChQ,EAAA,EAAD,CACIC,MAAO,CAACC,MAAM,WACdC,UAAW,KAGlB,W,gDAzCOjD,EAAMP,GAClC,OAAGO,EAAM+S,MACU,CACXZ,cAAc,IAGf,S,GArEUjR,aCGnB8R,G,4MAEFvT,MAAQ,CACJ0K,WAAU,EACVC,aAAY,EACZ9C,SAAS,CACL3H,KAAM,CACFmI,QAAS,QACTI,MAAO,GACPF,OAAO,CACHC,MAAO,eACPtI,KAAM,aACN3B,KAAM,OACNqM,YAAa,mBAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,GAEfzC,YAAa,CACTwC,QAAS,WACTI,MAAO,GACPF,OAAO,CACHC,MAAO,sBACPtI,KAAM,oBACN3B,KAAM,OACNqM,YAAa,0BAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,GAEf1C,MAAO,CACHyC,QAAS,QACTI,MAAO,GACPF,OAAO,CACHC,MAAO,gBACPtI,KAAM,cACN3B,KAAM,SACNqM,YAAa,oBAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,GAEf3C,MAAO,CACH0C,QAAS,SACTI,MAAO,GACPF,OAAO,CACHC,MAAO,gBACPtI,KAAM,eACN4I,QAAQ,IAEZb,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,GAEf+G,SAAU,CACNhH,QAAS,SACTI,MAAO,GACPF,OAAO,CACHC,MAAO,WACPtI,KAAM,iBACN4I,QAAQ,CACJ,CAAC/H,KAAI,EAAK0H,MAAM,OAChB,CAAC1H,KAAI,EAAM0H,MAAM,QAGzBR,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,GAEfiH,UAAW,CACPlH,QAAS,SACTI,MAAO,GACPF,OAAO,CACHC,MAAO,sBACPtI,KAAM,kBACN4I,QAAQ,CACJ,CAAC/H,KAAI,EAAK0H,MAAM,OAChB,CAAC1H,KAAI,EAAM0H,MAAM,QAGzBR,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,GAEfhB,KAAM,CACFe,QAAS,SACTI,MAAO,GACPF,OAAO,CACHC,MAAO,gBACPtI,KAAM,aACN4I,QAAQ,IAEZb,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,GAEfuD,MAAO,CACHxD,QAAS,SACTI,MAAO,GACPF,OAAO,CACHC,MAAO,QACPtI,KAAM,cACN4I,QAAQ,CACJ,CAAC/H,IAAI,GAAG0H,MAAM,IACd,CAAC1H,IAAI,GAAG0H,MAAM,IACd,CAAC1H,IAAI,GAAG0H,MAAM,IACd,CAAC1H,IAAI,GAAG0H,MAAM,MAGtBR,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,GAEfkL,QAAS,CACLnL,QAAS,SACTI,MAAO,GACPF,OAAO,CACHC,MAAO,UACPtI,KAAM,gBACN4I,QAAQ,CACJ,CAAC/H,KAAI,EAAK0H,MAAM,UAChB,CAAC1H,KAAI,EAAM0H,MAAM,YAGzBR,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,GAEf/C,OAAO,CACHkD,MAAM,GACNR,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,K,EAMvBmL,aAAe,SAACvK,GACZ,EAAK9F,SAAS,CACVyE,SAAUqB,K,EAIlB4B,WAAa,SAACzC,GACV,IAAMa,EAAcF,GAAOX,EAAQ,EAAKrI,MAAM6H,UAC9C,EAAKzE,SAAS,CACVsH,WAAW,EACX7C,SAAUqB,K,EAIlBwK,kBAAoB,WAChB,IAAMC,EAActJ,GAAY,EAAKrK,MAAM6H,UAE3C,EAAKzE,SAAS,CACVyE,SAAU8L,EACVhJ,aAAY,IAEhBY,YAAW,WACP,EAAKnI,SAAS,CACVuH,aAAa,IACf,WACE,EAAKpK,MAAMC,StBnHhB,CACHjC,KZpFqB,gBYqFrBC,QAAS,UsBmHP,M,EAGNuM,WAAY,SAACpC,GACTA,EAAMqC,iBAEN,IAAI1M,EAAewL,GAAa,EAAK9J,MAAM6H,UACzBkC,GAAY,EAAK/J,MAAM6H,UAGrC,EAAKtH,MAAMC,SAASqG,GAAWvI,IAAeK,MAAK,WAC3C,EAAK4B,MAAMkH,SAASZ,WAAWpG,QAC/B,EAAKiT,oBAEL,EAAKtQ,SAAS,CAACsH,WAAW,OAIlC,EAAKtH,SAAS,CACVsH,WAAW,K,EAoBvBiI,cAAgB,SAACpN,GACb,IAAMoO,EAAW,gBACV,EAAK3T,MAAM6H,UAElB8L,EAAW,OAAWlL,MAAQlD,EAC9BoO,EAAW,OAAWzL,OAAQ,EAE9B,EAAK9E,SAAS,CACVyE,SAAW8L,K,kEAtBC,IAAD,OACT9L,EAAWrG,KAAKxB,MAAM6H,SAE5BrG,KAAKjB,MAAMC,SAASuG,MAAapI,MAAM,SAAAC,GACnC,IAAM+U,EAAc1J,GAAqBpC,EAAS,EAAKtH,MAAMkH,SAASP,OAAO,SAC7E,EAAKuM,aAAaE,MAGtBnS,KAAKjB,MAAMC,SAAS+G,MAAY5I,MAAM,SAAAC,GAClC,IAAM+U,EAAc1J,GAAqBpC,EAAS,EAAKtH,MAAMkH,SAASJ,MAAM,QAC5E,EAAKoM,aAAaE,Q,+BAgBhB,IAAD,OACL,OACI,kBAAC,GAAD,KACI,6BACI,2CAEA,0BAAMzI,SAAU,SAACvC,GAAD,OAAU,EAAKoC,WAAWpC,KAEtC,kBAAC,GAAD,CACIgK,cAAe,SAACpN,GAAD,OAAW,EAAKoN,cAAcpN,IAC7C+N,MAAO9R,KAAKxB,MAAM2K,cAGtB,kBAAC,GAAD,CACItL,GAAI,OACJwI,SAAUrG,KAAKxB,MAAM6H,SAAS3H,KAC9B4H,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGxC,kBAAC,GAAD,CACGhJ,GAAI,cACJwI,SAAUrG,KAAKxB,MAAM6H,SAAShC,YAC9BiC,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGxC,kBAAC,GAAD,CACGhJ,GAAI,QACJwI,SAAUrG,KAAKxB,MAAM6H,SAASjC,MAC9BkC,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGzC,yBAAKvH,UAAU,iBAEf,kBAAC,GAAD,CACIzB,GAAI,QACJwI,SAAUrG,KAAKxB,MAAM6H,SAASlC,MAC9BmC,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGzC,kBAAC,GAAD,CACIhJ,GAAI,WACJwI,SAAUrG,KAAKxB,MAAM6H,SAASwH,SAC9BvH,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGxC,kBAAC,GAAD,CACGhJ,GAAI,YACJwI,SAAUrG,KAAKxB,MAAM6H,SAAS0H,UAC9BzH,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGzC,yBAAKvH,UAAU,iBAEf,kBAAC,GAAD,CACIzB,GAAI,OACJwI,SAAUrG,KAAKxB,MAAM6H,SAASP,KAC9BQ,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGzC,kBAAC,GAAD,CACIhJ,GAAI,QACJwI,SAAUrG,KAAKxB,MAAM6H,SAASgE,MAC9B/D,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGzC,yBAAKvH,UAAU,iBAEf,kBAAC,GAAD,CACIzB,GAAI,UACJwI,SAAUrG,KAAKxB,MAAM6H,SAAS2L,QAC9B1L,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGxC7G,KAAKxB,MAAM2K,YACR,yBAAK7J,UAAU,gBAAf,WAGH,KAEAU,KAAKxB,MAAM0K,UACR,yBAAK5J,UAAU,eAAf,0BAGE,KACN,4BAAQK,QAAS,SAACwH,GAAD,OAAW,EAAKoC,WAAWpC,KAA5C,sB,GAvVClH,aA4WVC,gBAPS,SAAC1B,GACrB,MAAO,CACHyH,SAAUzH,EAAMyH,YAKT/F,CAAyB6R,IC/WlCK,G,4MAEF5T,MAAQ,CACJ0K,WAAU,EACVC,aAAY,EACZ9C,SAAS,CACL3H,KAAM,CACFmI,QAAS,QACTI,MAAO,GACPF,OAAO,CACHrI,KAAM,aACN3B,KAAM,OACNqM,YAAa,mBAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,M,EAK9B0L,kBAAoB,kBAChB,EAAKtT,MAAMkH,SAASP,OAChB,EAAK3G,MAAMkH,SAASP,OAAO3F,KAAI,SAAC/B,EAAKG,GAAN,OAC3B,yBAAKmB,UAAU,gBAAgBC,IAAKvB,EAAKL,KACpCK,EAAKU,SAGjB,M,EAGL4K,WAAa,SAACzC,GACV,IAAMa,EAAcF,GAAOX,EAAQ,EAAKrI,MAAM6H,UAC9C,EAAKzE,SAAS,CACVsH,WAAW,EACX7C,SAAUqB,K,EAIlB4K,mBAAqB,WACjB,IAAMH,EAActJ,GAAY,EAAKrK,MAAM6H,UAE3C,EAAKzE,SAAS,CACVyE,SAAU8L,EACVhJ,aAAY,K,EAKpBI,WAAY,SAACpC,GACTA,EAAMqC,iBAEN,IAAI1M,EAAewL,GAAa,EAAK9J,MAAM6H,UACvCmC,EAAcD,GAAY,EAAK/J,MAAM6H,UACrCZ,EAAiB,EAAK1G,MAAMkH,SAASP,OAEtC8C,EACA,EAAKzJ,MAAMC,SAASwG,GAAS1I,EAAa2I,IAAiBtI,MAAK,SAAAC,GACxDA,EAASJ,QAAQiC,QAChB,EAAKqT,qBAEL,EAAK1Q,SAAS,CAACsH,WAAU,OAIjC,EAAKtH,SAAS,CACVsH,WAAW,K,kEAMnBlJ,KAAKjB,MAAMC,SAASuG,Q,+BAId,IAAD,OACL,OACI,yBAAKjG,UAAU,0BACX,sCACA,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,oBACVU,KAAKqS,sBAGd,yBAAK/S,UAAU,SAEf,0BAAMoK,SAAU,SAACvC,GAAD,OAAU,EAAKoC,WAAWpC,KAErC,kBAAC,GAAD,CACGtJ,GAAI,OACJwI,SAAUrG,KAAKxB,MAAM6H,SAAS3H,KAC9B4H,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAIxC7G,KAAKxB,MAAM0K,UACR,yBAAK5J,UAAU,eAAf,0BAGE,KACN,4BAAQK,QAAS,SAACwH,GAAD,OAAW,EAAKoC,WAAWpC,KAA5C,qB,GAzGGlH,aA6HZC,gBANS,SAAC1B,GACrB,MAAO,CACHyH,SAAUzH,EAAMyH,YAIT/F,CAAyBkS,IC7HlCG,G,4MAEF/T,MAAQ,CACJ0K,WAAU,EACVC,aAAY,EACZ9C,SAAS,CACL3H,KAAM,CACFmI,QAAS,QACTI,MAAO,GACPF,OAAO,CACHrI,KAAM,aACN3B,KAAM,OACNqM,YAAa,kBAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,M,EAK9B0L,kBAAoB,kBAChB,EAAKtT,MAAMkH,SAASJ,MAChB,EAAK9G,MAAMkH,SAASJ,MAAM9F,KAAI,SAAC/B,EAAKG,GAAN,OAC1B,yBAAKmB,UAAU,gBAAgBC,IAAKvB,EAAKL,KACpCK,EAAKU,SAGjB,M,EAGL4K,WAAa,SAACzC,GACV,IAAMa,EAAcF,GAAOX,EAAQ,EAAKrI,MAAM6H,UAC9C,EAAKzE,SAAS,CACVsH,WAAW,EACX7C,SAAUqB,K,EAIlB4K,mBAAqB,WACjB,IAAMH,EAActJ,GAAY,EAAKrK,MAAM6H,UAE3C,EAAKzE,SAAS,CACVyE,SAAU8L,EACVhJ,aAAY,K,EAIpBI,WAAY,SAACpC,GACTA,EAAMqC,iBAEN,IAAI1M,EAAewL,GAAa,EAAK9J,MAAM6H,UACvCmC,EAAcD,GAAY,EAAK/J,MAAM6H,UACrCT,EAAgB,EAAK7G,MAAMkH,SAASJ,MAErC2C,EACC,EAAKzJ,MAAMC,SAAS2G,GAAQ7I,EAAa8I,IAAgBzI,MAAK,SAAAC,GACvDA,EAASJ,QAAQiC,QAChB,EAAKqT,qBAEL,EAAK1Q,SAAS,CAACsH,WAAU,OAIjC,EAAKtH,SAAS,CACVsH,WAAW,K,kEAOnBlJ,KAAKjB,MAAMC,SAAS+G,Q,+BAId,IAAD,OACL,OACI,yBAAKzG,UAAU,0BACf,qCACA,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,oBACVU,KAAKqS,sBAGd,yBAAK/S,UAAU,SAEf,0BAAMoK,SAAU,SAACvC,GAAD,OAAU,EAAKoC,WAAWpC,KAErC,kBAAC,GAAD,CACGtJ,GAAI,OACJwI,SAAUrG,KAAKxB,MAAM6H,SAAS3H,KAC9B4H,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAIxC7G,KAAKxB,MAAM0K,UACR,yBAAK5J,UAAU,eAAf,0BAGE,KACN,4BAAQK,QAAS,SAACwH,GAAD,OAAW,EAAKoC,WAAWpC,KAA5C,oB,GAzGMlH,aA+HXC,gBAPS,SAAC1B,GACrB,MAAO,CACHyH,SAAUzH,EAAMyH,YAKT/F,CAAyBqS,ICzHzBC,GATU,WACrB,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,QCoDGC,GA3DU,SAAC,GAA2B,IAA1BxM,EAAyB,EAAzBA,SAASyM,EAAgB,EAAhBA,WAoDhC,OACI,6BAzCAzM,EAAShI,WACLgI,EAAShI,WAAW8B,KAAI,SAAAuQ,GAAO,OAC3B,yBAAKhR,UAAU,qBAAqBC,IAAK+Q,EAAQ3S,KAC7C,yBAAK2B,UAAU,QACX,yBACIA,UAAU,QACVwC,MAAO,CAACyB,WAAW,OAAD,QAhBjBQ,EAgByCuM,EAAQvM,OAfnEA,EAAOvE,OAAS,EACRuE,EAAO,GAAGC,IAEV,kCAY2B,mBAG1B,yBAAK1E,UAAU,QACX,4CACA,6BACKgR,EAAQnM,MAAMzF,KADnB,IAC0B4R,EAAQ5R,OAGtC,yBAAKY,UAAU,QACX,wCACA,6BACKgR,EAAQlS,WAGjB,yBAAKkB,UAAU,QACX,qCACA,kCACMgR,EAAQlM,QAGlB,yBAAK9E,UAAU,YACZ,yBAAKA,UAAU,kBACVK,QAAS,kBAAK+S,EAAWpC,EAAQ3S,OADtC,YAtCK,IAACoG,KA8CpB,O,8DCwBM4O,G,uKAtED,IAAD,OAqCDC,EAAQ5S,KAAKjB,MAAM8T,MAUvB,OACI,6BACI,kBAAC,KAAD,CACIC,IAfF,UAgBEC,OAZG,CACXC,QAAQ,mFACRC,WAAW,IAWHC,SAhBG,MAiBHN,MAAOA,EACPO,QAvBI,SAACC,GACb9O,QAAQC,IAAI8O,KAAKC,UAAUF,KAuBnBG,UArDM,SAACC,GAEf,EAAKzU,MAAMwU,UAAUC,IAoDbC,SA7BK,SAACpW,GACdiH,QAAQC,IAAI8O,KAAKC,UAAUjW,KA6BnByE,MAAO,CACHsD,KAAK,QACLrD,MAAO,OACP2R,MAAO,OACP1M,MAAO,mB,GA9DV/G,aCYf0T,G,4MAEFnV,MAAQ,CACJkD,SAAS,EACTkR,MAAM,EACNgB,WAAW,EACXC,aAAa,G,EAsBjBC,eAAiB,SAAC7V,GACd,IAAI2U,EAAQ,EAEZ3U,EAAWF,SAAQ,SAAAC,GACf4U,GAAS7F,SAAS/O,EAAKoG,MAAO,IAAMpG,EAAKI,YAG7C,EAAKwD,SAAS,CACVgR,QACAgB,WAAW,K,EAKnBG,eAAiB,SAAClW,GACd,EAAKkB,MAAMC,SAASpB,EAAeC,IAClCV,MAAK,WACC,EAAK4B,MAAMF,KAAKZ,WAAWuB,QAAU,EACpC,EAAKoC,SAAS,CACVgS,WAAW,IAGf,EAAKE,eAAe,EAAK/U,MAAMF,KAAKZ,gB,EAKhD+V,kBAAoB,kBAChB,yBAAK1U,UAAU,iBACX,kBAAC,IAAD,CAAiBgB,KAAM2T,OACvB,oD,EAMRC,iBAAmB,SAAC7W,GAChBiH,QAAQC,IAAI,iB,EAGhB4P,oBAAsB,WAClB7P,QAAQC,IAAI,wB,EAGhB6P,mBAAqB,SAAC/W,GAClB,EAAK0B,MAAMC,SAASX,EAAa,CAC7BJ,WAAY,EAAKc,MAAMF,KAAKZ,WAC5BoW,YAAahX,KACbF,MAAK,WACF,EAAK4B,MAAMF,KAAKyV,YACf,EAAK1S,SAAS,CACVgS,WAAW,EACXC,aAAa,Q,kEAvET,IAAD,OACXU,EAAY,GACZ1V,EAAOmB,KAAKjB,MAAMF,KAEnBA,EAAKQ,SAASvB,MACVe,EAAKQ,SAASvB,KAAK0B,OAAS,IAC3BX,EAAKQ,SAASvB,KAAKC,SAAQ,SAAAC,GACvBuW,EAAUpV,KAAKnB,EAAKH,OAExBmC,KAAKjB,MAAMC,SzCyCpB,SAAsBuV,EAAWC,GAgBpC,MAAO,CACHzX,KCtF2B,qBDuF3BC,QAhBYC,IAAMO,IAAN,UE1EU,eF0EV,8BAAiD+W,EAAjD,gBACCpX,MAAK,SAAAC,GASF,OAPAoX,EAASzW,SAAQ,SAAAC,GACbZ,EAASC,KAAKU,SAAQ,SAACG,EAAEC,GAClBH,EAAKH,KAAOK,EAAEP,MACbP,EAASC,KAAKc,GAAGC,SAAWJ,EAAKI,gBAItChB,EAASC,SyCrDJoX,CAAaF,EAAU1V,EAAKQ,SAASvB,OACxDX,MAAK,WACC,EAAK4B,MAAMF,KAAKZ,WAAWuB,OAAS,GACnC,EAAKsU,eAAe,EAAK/U,MAAMF,KAAKZ,kB,+BAiE9C,IAAD,OACL,OACI,kBAAC,GAAD,KACI,6BACI,uCACA,yBAAKqB,UAAU,aACX,kBAAC,GAAD,CACI2G,SAAUjG,KAAKjB,MAAMF,KACrB9B,KAAK,OACL2V,WAAY,SAAC7U,GAAD,OAAO,EAAKkW,eAAelW,MAEzCmC,KAAKxB,MAAMoV,UACT,6BACI,yBAAKtU,UAAU,iBACX,gDACqBU,KAAKxB,MAAMoU,SAMxC5S,KAAKxB,MAAMqV,YACP,yBAAKvU,UAAU,gBACX,kBAAC,IAAD,CAAiBgB,KAAMoU,OACvB,0CAGA,4DAKR1U,KAAKgU,qBAIThU,KAAKxB,MAAMoV,UACP,yBAAKtU,UAAU,2BACX,kBAAC,GAAD,CACIuT,MAAO7S,KAAKxB,MAAMoU,MAClBsB,iBAAkB,SAAC7W,GAAD,OAAS,EAAK6W,iBAAiB7W,IACjD8W,oBAAqB,SAAC9W,GAAD,OAAS,EAAK8W,oBAAoB9W,IACvDkW,UAAW,SAAClW,GAAD,OAAS,EAAK+W,mBAAmB/W,OAGvD,W,GAnIF4C,aAoJRC,gBANS,SAAC1B,GACrB,MAAO,CACHK,KAAML,EAAMK,QAILqB,CAAyByT,IC3JlCgB,G,4MAEFnW,MAAQ,CACJ0K,WAAW,EACXC,aAAY,EACZ9C,SAAS,CACL3H,KAAM,CACFmI,QAAS,QACTI,MAAO,GACPF,OAAO,CACHrI,KAAM,aACN3B,KAAM,OACNqM,YAAa,mBAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,IAEtBkD,SAAU,CACNhD,QAAS,QACTI,MAAO,GACPF,OAAO,CACHrI,KAAM,iBACN3B,KAAM,OACNqM,YAAa,uBAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,IAEtB7F,MAAO,CACH+F,QAAS,QACTI,MAAO,GACPF,OAAO,CACHrI,KAAM,cACN3B,KAAM,QACNqM,YAAa,oBAEjB3C,WAAW,CACP0B,UAAU,EACVrH,OAAO,GAEX4F,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,M,EAM9B2C,WAAa,SAACzC,GACV,IAAMa,EAAcF,GAAOX,EAAQ,EAAKrI,MAAM6H,UAC9C,EAAKzE,SAAS,CACVsH,WAAW,EACX7C,SAAUqB,K,EAIlB6B,WAAY,SAACpC,GACTA,EAAMqC,iBAEN,IAAI1M,EAAewL,GAAa,EAAK9J,MAAM6H,UACzBkC,GAAY,EAAK/J,MAAM6H,UAGrC,EAAKtH,MAAMC,SAASV,EAAexB,IAAeK,MAAK,WAChD,EAAK4B,MAAMF,KAAK+V,WAAW3V,SAC1B,EAAK2C,SAAS,CACVuH,aAAa,IACf,WACEY,YAAW,WACP,EAAKhL,MAAMC,S1C4D5B,CACHjC,KCzI8B,yBD0I9BC,QAAS,K0C7DW,EAAK4E,SAAS,CACVuH,aAAa,MAEnB,WAMd,EAAKvH,SAAS,CACVsH,WAAW,K,kEAMnB,IAAMiJ,EAAcrJ,GAAe9I,KAAKxB,MAAM6H,SAASrG,KAAKjB,MAAMF,KAAKQ,UACvEW,KAAK4B,SAAS,CACVyE,SAAU8L,M,+BAIR,IAAD,OACL,OACI,6BACI,0BAAMzI,SAAU,SAACvC,GAAD,OAAW,EAAKoC,WAAWpC,KACvC,oDACA,yBAAK7H,UAAU,kBACX,yBAAKA,UAAU,SACX,kBAAC,GAAD,CACIzB,GAAI,OACJwI,SAAUrG,KAAKxB,MAAM6H,SAAS3H,KAC9B4H,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,OAG7C,yBAAKvH,UAAU,SACX,kBAAC,GAAD,CACIzB,GAAI,WACJwI,SAAUrG,KAAKxB,MAAM6H,SAASwD,SAC9BvD,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,QAIjD,6BACI,kBAAC,GAAD,CACIhJ,GAAI,QACJwI,SAAUrG,KAAKxB,MAAM6H,SAASvF,MAC9BwF,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,OAG7C,6BAEQ7G,KAAKxB,MAAM2K,YACX,yBAAK7J,UAAU,gBAAf,WACC,KAEJU,KAAKxB,MAAM0K,UACR,yBAAK5J,UAAU,eAAf,0BAGE,KACN,4BAAQK,QAAS,SAACwH,GAAD,OAAW,EAAKoC,WAAWpC,KAA5C,+B,GA3IQlH,aA4JjBC,gBANS,SAAC1B,GACrB,MAAO,CACHK,KAAML,EAAMK,QAILqB,CAAyByU,ICvJzBE,GATO,WAClB,OACI,kBAAC,GAAD,KACI,uCACA,kBAAC,GAAD,QCANC,G,4MAEFtW,MAAQ,CACJ0K,WAAW,EACXC,aAAY,EACZ9C,SAAS,CACL7F,QAAS,CACLqG,QAAS,QACTI,MAAO,GACPF,OAAO,CACHC,MAAM,UACNtI,KAAM,gBACN3B,KAAM,OACNqM,YAAa,0BAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,GAEflG,MAAO,CACHiG,QAAS,QACTI,MAAO,GACPF,OAAO,CACHC,MAAM,gBACNtI,KAAM,cACN3B,KAAM,OACNqM,YAAa,gCAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,GAEfpG,MAAO,CACHmG,QAAS,QACTI,MAAO,GACPF,OAAO,CACHC,MAAM,eACNtI,KAAM,cACN3B,KAAM,OACNqM,YAAa,0BAEjB3C,WAAW,CACP0B,UAAU,GAEdzB,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,GAEfhG,MAAO,CACH+F,QAAS,QACTI,MAAO,GACPF,OAAO,CACHC,MAAM,aACNtI,KAAM,cACN3B,KAAM,QACNqM,YAAa,oBAEjB3C,WAAW,CACP0B,UAAU,EACVrH,OAAO,GAEX4F,OAAO,EACP2B,SAAS,EACT1B,kBAAkB,GAClBG,WAAW,K,EAKvBwC,WAAa,SAACzC,GACV,IAAMa,EAAcF,GAAOX,EAAQ,EAAKrI,MAAM6H,UAC9C,EAAKzE,SAAS,CACVsH,WAAW,EACX7C,SAAUqB,K,EAIlB6B,WAAY,SAACpC,GACTA,EAAMqC,iBAEN,IAAI1M,EAAewL,GAAa,EAAK9J,MAAM6H,UACzBkC,GAAY,EAAK/J,MAAM6H,UAGrC,EAAKtH,MAAMC,SAASgC,EAAelE,IAAeK,MAAK,WACnD,EAAKyE,SAAS,CACVuH,aAAa,IACf,WACEY,YAAW,WACP,EAAKnI,SAAS,CACVuH,aAAa,MAEnB,WAIV,EAAKvH,SAAS,CACVsH,WAAW,K,kEAKH,IAAD,OACflJ,KAAKjB,MAAMC,SAAS+B,KAAe5D,MAAK,WACpC,IAAMgV,EAAcrJ,GAAe,EAAKtK,MAAM6H,SAAS,EAAKtH,MAAMqC,KAAKf,SAAS,IAChF,EAAKuB,SAAS,CACVyE,SAAU8L,S,+BAMZ,IAAD,OACL,OACI,6BACI,0BAAMzI,SAAU,SAACvC,GAAD,OAAW,EAAKoC,WAAWpC,KACvC,yCACA,kBAAC,GAAD,CACItJ,GAAI,UACJwI,SAAUrG,KAAKxB,MAAM6H,SAAS7F,QAC9B8F,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGzC,kBAAC,GAAD,CACIhJ,GAAI,QACJwI,SAAUrG,KAAKxB,MAAM6H,SAASzF,MAC9B0F,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGzC,kBAAC,GAAD,CACIhJ,GAAI,QACJwI,SAAUrG,KAAKxB,MAAM6H,SAAS3F,MAC9B4F,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGzC,kBAAC,GAAD,CACIhJ,GAAI,QACJwI,SAAUrG,KAAKxB,MAAM6H,SAASvF,MAC9BwF,OAAQ,SAACO,GAAD,OAAa,EAAKyC,WAAWzC,MAGzC,6BAEQ7G,KAAKxB,MAAM2K,YACX,yBAAK7J,UAAU,gBAAf,WAGC,KAEJU,KAAKxB,MAAM0K,UACR,yBAAK5J,UAAU,eAAf,0BAGE,KACN,4BAAQK,QAAS,SAACwH,GAAD,OAAW,EAAKoC,WAAWpC,KAA5C,iB,GAnKIlH,aAoLbC,gBANS,SAAC1B,GACrB,MAAO,CACH4C,KAAM5C,EAAM4C,QAILlB,CAAyB4U,IChLzBC,GARI,WACf,OACI,kBAAC,GAAD,KACG,kBAAC,GAAD,QCmCIC,GAvBA,WACb,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,kBAAkBC,OAAK,EAAClJ,UAAWmJ,EAAKzE,IAAc,KAClE,kBAAC,IAAD,CAAOuE,KAAK,aAAaC,OAAK,EAAClJ,UAAWmJ,EAAKxB,IAAS,KACxD,kBAAC,IAAD,CAAOsB,KAAK,qBAAqBC,OAAK,EAAClJ,UAAWmJ,EAAKN,IAAc,KACrE,kBAAC,IAAD,CAAOI,KAAK,qBAAqBC,OAAK,EAAClJ,UAAWmJ,EAAKpD,IAAW,KAClE,kBAAC,IAAD,CAAOkD,KAAK,2BAA2BC,OAAK,EAAClJ,UAAWmJ,EAAK3C,IAAiB,KAC9E,kBAAC,IAAD,CAAOyC,KAAK,mBAAmBC,OAAK,EAAClJ,UAAWmJ,EAAKJ,IAAW,KAGhE,kBAAC,IAAD,CAAOE,KAAK,sBAAsBC,OAAK,EAAClJ,UAAWmJ,EAAKxF,GAAY,QACpE,kBAAC,IAAD,CAAOsF,KAAK,YAAYC,OAAK,EAAClJ,UAAWmJ,EAAKvL,IAAS,KACvD,kBAAC,IAAD,CAAOqL,KAAK,kBAAkBC,OAAK,EAAClJ,UAAWmJ,EAAKxL,IAAc,KAClE,kBAAC,IAAD,CAAOsL,KAAK,QAAQC,OAAK,EAAClJ,UAAWmJ,EAAKvI,GAAK,QAC/C,kBAAC,IAAD,CAAOqI,KAAK,IAAIC,OAAK,EAAClJ,UAAWmJ,EAAKnP,GAAK,W,wCCxBpCoP,GANKC,aAAgB,CAChCxW,KCQW,WAA0B,IAAjBL,EAAgB,uDAAV,GAAG8W,EAAO,uCACpC,OAAOA,EAAOvY,MACV,I/CfqB,gB+CgBjB,OAAO,6BAAIyB,GAAX,IAAkB+W,SAAUD,EAAOtY,UACvC,I/ClBkB,a+CmBd,OAAO,6BAAKwB,GAAZ,IAAmBgX,YAAaF,EAAOtY,UAC3C,I/ClBiB,Y+CmBb,OAAO,6BAAIwB,GAAX,IAAkBa,SAAUiW,EAAOtY,UACvC,I/CnBmB,c+CoBf,OAAO,gBAAIwB,GACf,I/CpBwB,mB+CqBpB,OAAO,6BAAIA,GAAX,IAAkBa,SAAS,6BACpBb,EAAMa,UADa,IAEtBvB,KAAMwX,EAAOtY,YAErB,I/CxB2B,qB+CyBvB,OAAO,6BAAIwB,GAAX,IAAiBP,WAAYqX,EAAOtY,UACxC,I/CzB6B,wB+C0BzB,OAAO,6BACAwB,GADP,IAEIP,WAAYqX,EAAOtY,QAAQiB,WAC3BoB,SAAS,6BACFb,EAAMa,UADL,IAEJvB,KAAMwX,EAAOtY,QAAQc,SAGjC,I/CjC2B,sB+CkCvB,OAAO,6BACAU,GADP,IAEI8V,WAAYgB,EAAOtY,QAAQiC,QAC3BI,SAAS,6BACFb,EAAMa,UADL,IAEJvB,KAAMwX,EAAOtY,QAAQc,OAEzBG,WAAYqX,EAAOtY,QAAQiB,aAEnC,I/C1CwB,mB+C4CxB,I/C3C8B,yB+C4C1B,OAAO,6BAAIO,GAAX,IAAiBoW,WAAYU,EAAOtY,UACxC,QACI,OAAOwB,IDhDfyH,SEQW,WAA0B,IAAjBzH,EAAgB,uDAAV,GAAG8W,EAAO,uCACpC,OAAOA,EAAOvY,MACV,IhDN4B,uBgDOxB,OAAO,6BAAIyB,GAAX,IAAkB0H,OAAQoP,EAAOtY,UACrC,IhDP+B,0BgDQ3B,OAAO,6BAAIwB,GAAX,IAAkB2H,UAAYmP,EAAOtY,UACzC,IhDRkB,agDSd,OAAO,6BAAIwB,GAAX,IAAkBkH,OAAQ4P,EAAOtY,UACrC,IhDTiB,YgDUb,OAAO,6BACAwB,GADP,IAEIgH,SAAU8P,EAAOtY,QAAQiC,QACzByG,OAAO4P,EAAOtY,QAAQ0I,SAE9B,IhDdkB,YgDed,OAAO,6BAAIlH,GAAX,IAAkBqH,MAAOyP,EAAOtY,UACpC,IhDfgB,WgDgBZ,OAAO,6BACAwB,GADP,IAEImH,QAAS2P,EAAOtY,QAAQiC,QACxB4G,MAAMyP,EAAOtY,QAAQ6I,QAE7B,IhDpB4B,uBgDqBxB,OAAO,6BACArH,GADP,IAEI6O,OAAQiI,EAAOtY,QAAQmI,SACvBuI,WAAY4H,EAAOtY,QAAQoI,OAEnC,IhDzBmB,cgD2BnB,IhD1BqB,gBgD2BjB,OAAO,6BAAK5G,GAAZ,IAAkB6G,WAAYiQ,EAAOtY,UACzC,IhD3B0B,qBgD6B1B,IhD5B4B,uBgD6BxB,OAAO,6BAAIwB,GAAX,IAAkBuR,WAAYuF,EAAOtY,UACzC,QACI,OAAOwB,IF5Cf4C,KGHW,WAA0B,IAAjB5C,EAAgB,uDAAV,GAAG8W,EAAO,uCACpC,OAAOA,EAAOvY,MACV,IjDgBqB,gBiDfjB,OAAO,6BAAKyB,GAAZ,IAAmB6B,SAAUiV,EAAOtY,UACxC,IjDewB,mBiDdpB,OAAO,6BAAKwB,GAAZ,IAAmB6B,SAAUiV,EAAOtY,QAAQyY,WAChD,QACI,OAAOjX,MCEbkX,GAA4BC,aAAgBC,KAAkBC,KAAlCF,CAA8CG,MAGhFC,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOP,GAA0BQ,GAAUzS,OAAO0S,8BAAgC1S,OAAO0S,iCAC/F,kBAAC,IAAD,KACI,kBAAC,GAAD,QAIVC,SAASC,eAAe,W","file":"static/js/main.64fbf457.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART_USER,\n    GET_CART_ITEMS_USER,\n    REMOVE_CART_ITEM_USER,\n    ON_SUCCESS_BUY_USER,\n    UPDATE_DATA_USER,\n    CLEAR_UPDATE_USER_DATA\n} from './types';\n\nimport { USER_SERVER, PRODUCT_SERVER } from '../components/utils/misc';\n\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n\n}\n\n\nexport function logoutUser(){\n\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n\n}\n\nexport function addToCart(_id){\n\n    const request = axios.post( `${USER_SERVER}/addToCart?productId=${_id}`)\n    .then(response => response.data)\n\n    return {\n        type: ADD_TO_CART_USER,\n        payload: request\n    }\n}\n\nexport function getCartItems(cartItems, userCart){\n\n    const request = axios.get(`${PRODUCT_SERVER}/articles_by_id?id=${cartItems}&type=array`)\n                    .then(response => {\n     \n                        userCart.forEach(item=>{\n                            response.data.forEach((k,i)=>{\n                                if(item.id === k._id){\n                                    response.data[i].quantity = item.quantity;\n                                }\n                            })\n                        })\n                        return response.data;\n                    })\n                 \n\n    return {\n        type: GET_CART_ITEMS_USER,\n        payload: request\n    }\n\n}\n\n\nexport function removeCartItem(id){\n\n    const request = axios.get(`${USER_SERVER}/removeFromCart?_id=${id}`)\n                    .then(response => {\n\n                        response.data.cart.forEach(item=>{\n                            response.data.cartDetail.forEach((k,i)=>{\n                                if(item.id === k._id){\n                                    response.data.cartDetail[i].quantity = item.quantity;\n                                }\n                            })\n                        })\n                            return response.data;\n                    })\n\n    return {\n        type: REMOVE_CART_ITEM_USER,\n        payload: request\n    }\n\n}\n\n\n\nexport function onSuccessBuy(data){ \n    const request = axios.post(`${USER_SERVER}/successBuy`,data)\n                    .then(response => response.data);\n\n    return {\n        type: ON_SUCCESS_BUY_USER,\n        payload: request\n    }\n}\n\nexport function updateUserData(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/update_profile`,dataToSubmit)\n                    .then(response => {\n                        return response.data\n                    });\n    \n    return {\n        type: UPDATE_DATA_USER,\n        payload: request\n    }\n}\n\nexport function clearUpdateUser(){\n    return {\n        type: CLEAR_UPDATE_USER_DATA,\n        payload: ''\n    }\n}","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\nexport const ADD_TO_CART_USER = 'add_to_cart_user';\nexport const GET_CART_ITEMS_USER = 'get_cart_item_user';\nexport const REMOVE_CART_ITEM_USER = 'remove_cart_item_user';\nexport const ON_SUCCESS_BUY_USER = 'on_success_buy_user';\nexport const UPDATE_DATA_USER = 'update_data_user';\nexport const CLEAR_UPDATE_USER_DATA = 'clear_update_user_data'\n\nexport const GET_PRODUCTS_BY_SELL = 'get_products_by_sell';\nexport const GET_PRODUCTS_BY_ARRIVAL = 'get_products_by_arrival';\nexport const GET_BRANDS = 'get_brands';\nexport const ADD_BRAND = 'add_brand';\nexport const GET_WOODS =  'get_woods';\nexport const ADD_WOOD = 'add_wood';\nexport const GET_PRODUCTS_TO_SHOP = 'get_products_to_shop';\nexport const ADD_PRODUCT = 'add_product';\nexport const CLEAR_PRODUCT = 'clear_product';\nexport const GET_PRODUCT_DETAIL = 'get_product_detail';\nexport const CLEAR_PRODUCT_DETAIL = 'clear_product_detail';\n\nexport const GET_SITE_DATA = 'get_site_data';\nexport const UPDATE_SITE_DATA = 'update_site_data';\n","// SERVER ROUTES\nexport const USER_SERVER = '/api/users';\nexport const PRODUCT_SERVER = '/api/product';\nexport const SITE_SERVER = '/api/site';","import React, { Component } from 'react';\nimport { Link, withRouter} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../../actions/user_actions';\n\nclass Header extends Component {\n\n    state = {\n        page:[\n            {\n                name:'Home',\n                linkTo:'/',\n                public: true\n            },\n            {\n                name:'Products',\n                linkTo:'/shop',\n                public: true\n            }\n        ],\n        user:[\n            {\n                name:'My Cart',\n                linkTo:'/user/cart',\n                public: false\n            },\n            {\n                name:'My Account',\n                linkTo:'/user/dashboard',\n                public: false\n            },\n            {\n                name:'Log in',\n                linkTo:'/register_login',\n                public: true\n            },\n            {\n                name:'Log out',\n                linkTo:'/user/logout',\n                public: false\n            },\n        ]\n    }\n\n\n    logoutHandler = () => {\n        this.props.dispatch(logoutUser()).then(response =>{\n            if(response.payload.success){\n                this.props.history.push('/')\n            }\n        })\n    }\n\n\n    cartLink = (item,i) => {\n        const user = this.props.user.userData;\n\n        return (\n            <div className=\"cart_link\" key={i}>\n                <span>{user.cart ? user.cart.length:0}</span>\n                <Link to={item.linkTo}>\n                    {item.name}\n                </Link>\n            </div>\n        )\n    }\n\n\n    defaultLink = (item,i) => (\n        item.name === 'Log out' ?\n            <div className=\"log_out_link\"\n                key={i}\n                onClick={()=> this.logoutHandler()}\n            >\n                {item.name}\n            </div>\n\n        :\n        <Link to={item.linkTo} key={i}>\n            {item.name}\n        </Link>\n    )\n\n\n    showLinks = (type) =>{\n        let list = [];\n\n        if(this.props.user.userData){\n            type.forEach((item)=>{\n                if(!this.props.user.userData.isAuth){\n                    if(item.public === true){\n                        list.push(item)\n                    }\n                } else{\n                    if(item.name !== 'Log in'){\n                        list.push(item)\n                    }\n                }\n            });\n        }\n\n        return list.map((item,i)=>{\n            if(item.name !== 'My Cart'){\n                return this.defaultLink(item,i)\n            } else {\n                return this.cartLink(item,i)\n            }\n            \n        })\n    }\n\n\n    render() {\n        return (\n            <header className=\"bck_b_light\">\n                <div className=\"container\">\n                    <div className=\"left\">\n                        <div className=\"logo\">\n                            Express\n                        </div>\n                    </div>\n                    <div className=\"right\">\n                        <div className=\"top\">\n                            {this.showLinks(this.state.user)}\n                        </div>\n                        <div className=\"bottom\">\n                            {this.showLinks(this.state.page)}\n                        </div>\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(Header));","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport faCompass from '@fortawesome/fontawesome-free-solid/faCompass';\nimport faPhone from '@fortawesome/fontawesome-free-solid/faPhone';\nimport faClock from '@fortawesome/fontawesome-free-solid/faClock';\nimport faEnvelope from '@fortawesome/fontawesome-free-solid/faEnvelope';\n\n\n\nconst Footer = ({data}) => {\n    return (\n        data.siteData ?\n        <footer className=\"bck_b_dark\">\n            <div className=\"container\">\n                <div className=\"logo\">\n                    Fashion Express\n                </div>\n                <div className=\"wrapper\">\n                    <div className=\"left\">\n                        <h2>Contact information</h2>\n                        <div className=\"business_nfo\">\n                            <div className=\"tag\">\n                                <FontAwesomeIcon\n                                    icon={faCompass}\n                                    className=\"icon\"\n                                />\n                                <div className=\"nfo\">\n                                    <div>Address</div>\n                                    <div>{data.siteData[0].address}</div>\n                                </div>\n                            </div>\n                            <div className=\"tag\">\n                                <FontAwesomeIcon\n                                    icon={faPhone}\n                                    className=\"icon\"\n                                />\n                                <div className=\"nfo\">\n                                    <div>Phone</div>\n                                    <div>{data.siteData[0].phone}</div>\n                                </div>\n                            </div>\n                            <div className=\"tag\">\n                                <FontAwesomeIcon\n                                    icon={faClock}\n                                    className=\"icon\"\n                                />\n                                <div className=\"nfo\">\n                                    <div>Working hours</div>\n                                    <div>{data.siteData[0].hours}</div>\n                                </div>\n                            </div>\n                            <div className=\"tag\">\n                                <FontAwesomeIcon\n                                    icon={faEnvelope}\n                                    className=\"icon\"\n                                />\n                                <div className=\"nfo\">\n                                    <div>Email</div>\n                                    <div>{data.siteData[0].email}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div> \n                    <div className=\"left\">\n                        <h2>Be the first to know</h2>\n                        <div>\n                            <div>\n                            Get all the latest information on events, sales and offers.You can miss out.\n                            </div>\n                        </div>\n                    </div>      \n                </div>\n            </div>\n        </footer>\n        :null\n    );\n};\n\nexport default Footer;","import axios from 'axios';\nimport {\n    GET_SITE_DATA,\n    UPDATE_SITE_DATA\n} from './types';\n\nimport { SITE_SERVER } from '../components/utils/misc';\n\nexport function getSiteData(){\n\n    const request = axios.get(`${SITE_SERVER}/site_data`)\n                    .then(response => response.data);\n\n    return {\n        type: GET_SITE_DATA,\n        payload: request\n    }\n\n}\n\nexport function updateSiteData(dataToSubmit){\n    const request = axios.post(`${SITE_SERVER}/site_data`, dataToSubmit)\n        .then(response => response.data);\n\n    return {\n        type: UPDATE_SITE_DATA,\n        payload: request\n    }\n\n}\n\n","import React, { Component } from 'react';\n\nimport Header from '../components/Header_footer/Header';\nimport Footer from '../components/Header_footer/Footer';\n\nimport { connect } from 'react-redux';\nimport { getSiteData } from '../actions/site_actions';\n\nclass Layout extends Component {\n\n\n    componentDidMount(){\n        if(Object.keys(this.props.site).length === 0){\n            this.props.dispatch(getSiteData());\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <div className=\"page_container\">\n                    {this.props.children}\n                </div>\n                <Footer data={this.props.site}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        site: state.site\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { auth } from '../actions/user_actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function(ComposedClass,reload,adminRoute = null){\n    class AuthenticationCheck extends Component {\n\n        state = {\n            loading: true\n        }\n\n        componentDidMount(){\n            this.props.dispatch(auth()).then(response =>{\n                let user = this.props.user.userData;\n\n                if(!user.isAuth){\n                    if(reload){\n                        this.props.history.push('/register_login')\n                    }\n                } else{\n                    if(adminRoute && !user.isAdmin){\n                        this.props.history.push('/user/dashboard')\n                    } else{\n                        if(reload === false){\n                            this.props.history.push('/user/dashboard')\n                        }\n                    }\n                }\n                this.setState({loading:false})\n            })\n        }\n\n\n        render() {\n            if(this.state.loading){\n                return (\n                    <div className=\"main_loader\">\n                        <CircularProgress style={{color:'#2196F3'}} thickness={7}/> \n                    </div>\n                )\n            }\n            return (\n               <ComposedClass {...this.props} user={this.props.user}/>\n            );\n        }\n    }\n\n    function mapStateToProps(state){\n        return {\n            user: state.user\n        }\n    }\n\n    return connect(mapStateToProps)(AuthenticationCheck)\n}\n\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport faShoppingBag from '@fortawesome/fontawesome-free-solid/faShoppingBag';\n\n\nconst MyButton = (props) => {\n\n    const buttons = () => {\n        let template = '';\n\n        switch(props.type){\n            case \"default\":\n                template = <Link\n                    className={!props.altClass ? 'link_default': props.altClass }   \n                    to={props.linkTo}\n                    {...props.addStyles}\n                >\n                    {props.title}\n                </Link>\n            break;\n            case \"bag_link\":\n                template = \n                    <div className=\"bag_link\"\n                        onClick={()=>{\n                            props.runAction();\n                        }}\n                    >\n                        <FontAwesomeIcon\n                            icon={faShoppingBag}\n                        />\n                    </div>\n            break;\n            case \"add_to_cart_link\":\n                template =   \n                    <div className=\"add_to_cart_link\"\n                        onClick={()=>{\n                            props.runAction();\n                        }}\n                    >\n                        <FontAwesomeIcon\n                            icon={faShoppingBag}\n                        />\n                        Add to cart\n                    </div>\n            break;\n            default:\n                template='';\n        }\n        return template\n    }\n\n\n    return (\n        <div className=\"my_link\">\n             {buttons()}   \n        </div>\n    );\n};\n\nexport default MyButton;","import React from 'react';\nimport Slider from 'react-slick';\nimport MyButton from '../utils/button';\n\nconst HomeSlider = (props) => {\n\n    const slides = [\n        {\n            img:'/images/featured/color.jpg',\n            lineOne:'Fender',\n            lineTwo:'Custom shop',\n            linkTitle:'Shop now',\n            linkTo:'/shop'\n        },\n        {\n            img:'/images/featured/fashion1.jpg',\n            lineOne:'B-Stock',\n            lineTwo:'Awesome discounts',\n            linkTitle:'View offers',\n            linkTo:'/shop'\n        },\n        {\n            img:'/images/featured/denim.jpg',\n            lineOne:'B-Stock',\n            lineTwo:'Awesome discounts',\n            linkTitle:'View offers',\n            linkTo:'/shop'\n        },\n        {\n            img:'/images/featured/splash.jpg',\n            lineOne:'B-Stock',\n            lineTwo:'Awesome discounts',\n            linkTitle:'View offers',\n            linkTo:'/shop'\n        }\n    ]\n\n    const settings = {\n        dots: false,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        arrows: false\n    }\n\n    const generateSlides = () => (\n        slides ?\n            slides.map((item,i)=>(\n                <div key={i}>\n                    <div className=\"featured_image\"\n                        style={{\n                            background:`url(${item.img})`,\n                            height:`${window.innerHeight}px`\n                        }}\n                    >\n                        <div className=\"featured_action\">\n                            <div className=\"tag title\">{item.lineOne}</div>\n                            <div className=\"tag low_title\">{item.lineTwo}</div>\n                            <div>\n                                <MyButton\n                                    type=\"default\"\n                                    title={item.linkTitle}\n                                    linkTo={item.linkTo}\n                                    addStyles={{\n                                        margin:'10px 0 0 0'\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ))\n        :null\n    )\n    \n \n\n    return (\n        <div className=\"featured_container\">\n            <Slider {...settings}>\n                { generateSlides()}\n            </Slider>\n        </div>\n    );\n};\n\nexport default HomeSlider;","import React from 'react';\nimport MyButton from '../utils/button';\n\nconst HomePromotion = (props) => {\n\n    const promotion = {\n        img:'/images/featured/sp.jpg',\n        lineOne:'Up to 40% off',\n        lineTwo:'Leather Brand new Shoes',\n        linkTitle:'Shop now',\n        linkTo:'/shop'\n    }\n\n    const renderPromotion = () => (\n        promotion ?\n        <div className=\"home_promotion_img\"\n            style={{\n                background:`url(${promotion.img})`\n            }}\n        >\n                <div className=\"tag title\">{promotion.lineOne}</div>\n                <div className=\"tag low_title\">{promotion.lineTwo}</div>\n                <div>\n                    <MyButton\n                        type=\"default\"\n                        title={promotion.linkTitle}\n                        linkTo={promotion.linkTo}\n                        addStyles={{\n                            margin: '10px 0 0 0'\n                        }}\n                    />\n                </div>\n        </div>\n        :null\n    )\n\n    return (\n        <div className=\"home_promotion\">\n            {renderPromotion()}\n        </div>\n    );\n};\n\nexport default HomePromotion;","import React, { Component } from 'react';\nimport MyButton from './button';\n\nimport { connect } from 'react-redux';\nimport { addToCart } from '../../actions/user_actions';\n\nclass Card extends Component {\n\n    renderCardImage(images){\n        if(images.length > 0){\n            return images[0].url\n        } else {\n            return '/images/image_not_availble.png'\n        }\n    }\n\n\n    render() {\n        const props = this.props;\n        return (\n            <div className={`card_item_wrapper ${props.grid}`}>\n                <div\n                    className=\"image\"\n                    style={{\n                        background:`url(${this.renderCardImage(props.images)}) no-repeat`\n                    }}\n                >  </div>\n                    <div className=\"action_container\">\n                        <div className=\"tags\">\n                            <div className=\"brand\">{props.brand.name}</div>\n                            <div className=\"name\">{props.name}</div>\n                            <div className=\"name\">${props.price}</div>\n                        </div>\n                    \n                    { props.grid ?\n                        <div className=\"description\">\n                            <p>\n                                {props.description}\n                            </p>    \n                        </div>\n                        :null\n                    }\n                    <div className=\"actions\">\n                        <div className=\"button_wrapp\">\n                            <MyButton\n                                type=\"default\"\n                                altClass=\"card_link\"\n                                title=\"View product\"\n                                linkTo={`/product_detail/${props._id}`}\n                                addStyles={{\n                                    margin: '10px 0 0 0'\n                                }}\n                            />\n                        </div>\n                        <div className=\"button_wrapp\">\n                            <MyButton\n                                type=\"bag_link\"\n                                runAction={()=>{\n                                    props.user.userData.isAuth ?\n                                        this.props.dispatch(addToCart(props._id))\n                                    :\n                                        console.log('you need to log in')\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(Card);","import React from 'react';\nimport Card from './card';\n\nconst CardBlock = (props) => {\n\n\n    const renderCards = () =>(\n        props.list ?\n            props.list.map((card,i)=>(\n                    <Card\n                        key={i}\n                        {...card}\n                    />\n            ))\n        :null\n    )\n\n\n    return (\n        <div className=\"card_block\">\n            <div className=\"container\">\n                {\n                    props.title ?\n                        <div className=\"title\">\n                            {props.title}\n                        </div>\n                    :null\n                }\n                <div style={{\n                    display:'flex',\n                    flexWrap:'wrap'\n                }}>\n                    { renderCards(props.list)}\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default CardBlock;","import axios from 'axios';\nimport {\n    GET_PRODUCTS_BY_SELL,\n    GET_PRODUCTS_BY_ARRIVAL,\n    GET_BRANDS,\n    ADD_BRAND,\n    GET_WOODS,\n    ADD_WOOD,\n    GET_PRODUCTS_TO_SHOP,\n    ADD_PRODUCT,\n    CLEAR_PRODUCT,\n    GET_PRODUCT_DETAIL,\n    CLEAR_PRODUCT_DETAIL\n} from './types';\n\nimport { PRODUCT_SERVER } from '../components/utils/misc';\n\n\n\nexport function getProductDetail(id){\n\n    const request = axios.get(`${PRODUCT_SERVER}/articles_by_id?id=${id}&type=single`)\n    .then(response=>{\n        return response.data[0]\n    });\n\n    return {\n        type: GET_PRODUCT_DETAIL,\n        payload: request\n    }\n\n}\n\n\nexport function clearProductDetail(){\n    return {\n        type: CLEAR_PRODUCT_DETAIL,\n        payload:''\n    }\n}\n\n\nexport function getProductsBySell(){\n    //?sortBy=sold&order=desc&limit=100\n    const request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=sold&order=desc&limit=4`)\n                    .then(response => response.data);\n\n    return {\n        type: GET_PRODUCTS_BY_SELL,\n        payload: request\n    }\n\n}\n\nexport function getProductsByArrival(){\n    const request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=createdAt&order=desc&limit=4`)\n    .then(response => response.data);\n\n    return {\n        type: GET_PRODUCTS_BY_ARRIVAL,\n        payload: request\n    }\n}\n\nexport function getProductsToShop(skip, limit,filters =[], previousState = []){\n    const data = {\n        limit,\n        skip,\n        filters\n    }\n\n    const request = axios.post(`${PRODUCT_SERVER}/shop`,data)\n                .then(response => {\n                    let newState = [\n                        ...previousState,\n                        ...response.data.articles\n                    ];\n                    return {\n                        size: response.data.size,\n                        articles: newState\n                    }\n                });\n\n    return {\n        type: GET_PRODUCTS_TO_SHOP,\n        payload: request\n    }\n\n}\n\nexport function addProduct(datatoSubmit){\n\n    const request = axios.post(`${PRODUCT_SERVER}/article`,datatoSubmit)\n                    .then(response => response.data);\n\n    return {\n        type: ADD_PRODUCT,\n        payload: request\n    }\n}\n\nexport function clearProduct(){\n    return {\n        type: CLEAR_PRODUCT,\n        payload: ''\n    }\n}\n\n\n\n\n////////////////////////////////////\n//////        CATEGORIES\n////////////////////////////////////\n\n\nexport function getBrands(){\n\n    const request = axios.get(`${PRODUCT_SERVER}/brands`)\n                .then(response => response.data );\n\n    return {\n        type: GET_BRANDS,\n        payload: request\n    }\n\n}\n\nexport function addBrand(dataToSubmit, existingBrands){\n    const request = axios.post(`${PRODUCT_SERVER}/brand`,dataToSubmit)\n    .then(response=>{\n        let brands = [\n            ...existingBrands,\n            response.data.brand\n        ];\n        return {\n            success: response.data.success,\n            brands\n        }\n    });\n    return {\n        type: ADD_BRAND,\n        payload: request\n    }\n}\n\n\nexport function addWood(dataToSubmit, existingWoods){\n    const request = axios.post(`${PRODUCT_SERVER}/wood`,dataToSubmit)\n    .then(response=>{\n        let woods = [\n            ...existingWoods,\n            response.data.wood\n        ];\n        return {\n            success: response.data.success,\n            woods\n        }\n    });\n    return {\n        type: ADD_WOOD,\n        payload: request\n    }\n}\n\n\n\nexport function getWoods(){\n    const request = axios.get(`${PRODUCT_SERVER}/woods`)\n    .then(response => response.data );\n\n    return {\n        type: GET_WOODS,\n        payload: request\n    }\n}","import React, { Component } from 'react';\nimport HomeSlider from './home_slider';\nimport HomePromotion from './home_promotion'\nimport CardBlock from '../utils/card_block';\n\nimport { connect } from 'react-redux';\nimport { getProductsBySell, getProductsByArrival } from '../../actions/products_actions';\n\nclass Home extends Component {\n\n    componentDidMount(){\n        this.props.dispatch(getProductsBySell()).then(()=>{\n            console.log(this.props)\n        });\n        this.props.dispatch(getProductsByArrival());\n    }\n\n    render() {\n        return (\n            <div>\n                <HomeSlider/>\n                <CardBlock\n                    list={this.props.products.bySell}\n                    title=\"Best Selling Products\"\n                />\n                <HomePromotion/>\n                <CardBlock\n                    list={this.props.products.byArrival}\n                    title=\"New arrivals\"\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products\n    }\n}\n\nexport default connect(mapStateToProps)(Home);","import React from 'react';\n\nconst Formfield = ({formdata, change, id}) => {\n\n\n    const showError = () => {\n        let errorMessage = null;\n\n        if(formdata.validation && !formdata.valid){\n            errorMessage = (\n                <div className=\"error_label\">\n                    {formdata.validationMessage}\n                </div>\n            )\n        }\n\n        return errorMessage;\n    }\n\n\n    const renderTemplate = () => {\n        let formTemplate = null;\n\n        switch(formdata.element){\n            case('input'):\n                formTemplate = (\n                    <div className=\"formBlock\">\n                        { formdata.showlabel ? \n                            <div className=\"label_inputs\">{formdata.config.label}</div>\n                        :null}\n\n                        <input\n                            {...formdata.config}\n                            value={formdata.value}\n                            onBlur={(event)=> change({event,id,blur:true})}\n                            onChange={(event)=> change({event,id}) }\n                        />\n                        {showError()}\n                    </div>\n                )\n            break;\n            case('select'):\n                formTemplate = (\n                    <div className=\"formBlock\">\n                        { formdata.showlabel ? \n                            <div className=\"label_inputs\">{formdata.config.label}</div>\n                        :null}\n                        <select\n                            value={formdata.value}\n                            onBlur={(event)=> change({event,id,blur:true})}\n                            onChange={(event)=> change({event,id}) }\n                        >\n                            <option value=\"\">Select one</option>\n                            {\n                                formdata.config.options.map(item=>(\n                                    <option \n                                        key={item.key} \n                                        value={item.key}\n                                    >\n                                        {item.value}\n                                    </option>\n                                ))\n                            }\n                        </select>\n                        {showError()}\n                    </div>\n                )\n            break;\n            case('textarea'):\n            formTemplate = (\n                <div className=\"formBlock\">\n                    { formdata.showlabel ? \n                        <div className=\"label_inputs\">{formdata.config.label}</div>\n                    :null}\n                    <textarea\n                        {...formdata.config}\n                        value={formdata.value}\n                        onBlur={(event)=> change({event,id,blur:true})}\n                        onChange={(event)=> change({event,id}) }\n                    />\n                    {showError()}\n                </div>\n            )\n            break;\n            default:\n                formTemplate = null;\n        }\n\n        return formTemplate;\n    }\n\n\n    return (\n        <div>\n            {renderTemplate()}\n        </div>\n    );\n};\n\nexport default Formfield;","\n\nexport const validate = (element, formdata= []) => {\n    let error = [true,''];\n\n\n    if(element.validation.email){\n        const valid = /\\S+@\\S+\\.\\S+/.test(element.value)\n        const message = `${!valid ? 'Must be a valid email':''}`;\n        error = !valid ? [valid,message] : error;\n    }\n\n    if(element.validation.confirm){\n        const valid = element.value.trim() === formdata[element.validation.confirm].value;\n        const message = `${!valid ? 'Passwords do not match':''}`;\n        error = !valid ? [valid,message] : error;\n    }\n\n    if(element.validation.required){\n        const valid = element.value.trim() !== '';\n        const message = `${!valid ? 'This field is required':''}`;\n        error = !valid ? [valid,message] : error;\n    }\n\n    return error\n}\n\nexport const update = (element, formdata, formName ) => {\n    const newFormdata = {\n        ...formdata\n    }\n    const newElement = {\n        ...newFormdata[element.id]\n    }\n\n    newElement.value = element.event.target.value;\n\n    if(element.blur){\n        let validData = validate(newElement,formdata);\n        newElement.valid = validData[0];\n        newElement.validationMessage = validData[1];\n    }\n\n    newElement.touched = element.blur;\n    newFormdata[element.id] = newElement;\n\n    return newFormdata;\n}\n\nexport const generateData = (formdata, formName) =>{\n    let dataToSubmit = {};\n\n    for(let key in formdata){\n        if(key !== 'confirmPassword'){\n            dataToSubmit[key] = formdata[key].value;\n        }\n    }\n\n    return dataToSubmit;\n}\n\nexport const isFormValid = (formdata, formName) => {\n    let formIsValid = true;\n\n    for(let key in formdata){\n        formIsValid = formdata[key].valid && formIsValid\n    }\n    return formIsValid;\n}\n\nexport const populateOptionFields= (formdata, arrayData =[],field) => {\n    const newArray = [];\n    const newFormdata = {...formdata};\n\n    arrayData.forEach(item=>{\n        newArray.push({key:item._id,value:item.name});\n    });\n\n    newFormdata[field].config.options = newArray;\n    return newFormdata;\n}\n\nexport const resetFields = (formdata, formName)=>{\n    const newFormdata = {...formdata};\n\n    for(let key in newFormdata){\n        if(key === 'images'){\n            newFormdata[key].value = [];\n        }else{\n            newFormdata[key].value = '';\n        }\n\n        newFormdata[key].valid = false;\n        newFormdata[key].touched = false;\n        newFormdata[key].validationMessage = '';\n    }\n\n    return newFormdata\n}\n\nexport const populateFields = (formData, fields) => {\n\n    for(let key in formData){\n        formData[key].value = fields[key];\n        formData[key].valid = true;\n        formData[key].touched = true;\n        formData[key].validationMessage = ''\n    }\n\n    return formData;\n}\n","import React, { Component } from 'react';\nimport FormField from '../utils/Form/formfield';\nimport { update, generateData, isFormValid } from '../utils/Form/formActions';\nimport { withRouter } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/user_actions';\n\nclass Login extends Component {\n\n    state = {\n        formError: false,\n        formSuccess:'',\n        formdata:{\n            email: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'email_input',\n                    type: 'email',\n                    placeholder: 'Enter your email'\n                },\n                validation:{\n                    required: true,\n                    email: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            },\n            password: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'password_input',\n                    type: 'password',\n                    placeholder: 'Enter your password'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            }\n        }\n    }\n\n    updateForm = (element) => {\n        const newFormdata = update(element,this.state.formdata,'login');\n        this.setState({\n            formError: false,\n            formdata: newFormdata\n        })\n    }\n\n\n    submitForm= (event) =>{\n        event.preventDefault();\n        \n        let dataToSubmit = generateData(this.state.formdata,'login');\n        let formIsValid = isFormValid(this.state.formdata,'login')\n\n        if(formIsValid){\n            this.props.dispatch(loginUser(dataToSubmit)).then(response =>{\n                if(response.payload.loginSuccess){\n                    console.log(response.payload);\n                    this.props.history.push('/user/dashboard')\n                }else{\n                    this.setState({\n                        formError: true\n                    })\n                }\n            });\n\n        } else {\n            this.setState({\n                formError: true\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"signin_wrapper\">\n                <form onSubmit={(event)=> this.submitForm(event)}>\n\n                    <FormField\n                        id={'email'}\n                        formdata={this.state.formdata.email}\n                        change={(element)=> this.updateForm(element)}\n                    />\n\n                    <FormField\n                        id={'password'}\n                        formdata={this.state.formdata.password}\n                        change={(element)=> this.updateForm(element)}\n                    />\n\n                    { this.state.formError ?\n                        <div className=\"error_label\">\n                            Please check your data\n                        </div>\n                    :null}\n                    <button onClick={(event)=> this.submitForm(event)}>\n                        Log in\n                    </button>\n\n\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default connect()(withRouter(Login));","import React from 'react';\nimport MyButton from '../utils/button';\nimport Login from './login';\n\nconst RegisterLogin = () => {\n    return (\n        <div className=\"page_wrapper\">\n            <div className=\"container\">\n                <div className=\"register_login_container\">\n                    <div className=\"left\">\n                        <h1>New Customers</h1>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\n                        <MyButton\n                            type=\"default\"\n                            title=\"Create an account\"\n                            linkTo=\"/register\"\n                            addStyles={{\n                                margin:'10px 0 0 0'\n                            }}\n                        />\n                    </div>\n                    <div className=\"right\">\n                        <h2>Registered customers</h2>\n                        <p>If you have an account please log in.</p>\n                        <Login/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterLogin;","import React, { Component } from 'react';\nimport FormField from '../utils/Form/formfield';\nimport { update, generateData, isFormValid } from '../utils/Form/formActions';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/user_actions';\n\nclass Register extends Component {\n\n    state = {\n        formError: false,\n        formSuccess:false,\n        formdata:{\n            name: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'name_input',\n                    type: 'text',\n                    placeholder: 'Enter your name'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            },\n            lastname: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'lastname_input',\n                    type: 'text',\n                    placeholder: 'Enter your lastname'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            },\n            email: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'email_input',\n                    type: 'email',\n                    placeholder: 'Enter your email'\n                },\n                validation:{\n                    required: true,\n                    email: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            },\n            password: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'password_input',\n                    type: 'password',\n                    placeholder: 'Enter your password'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            },\n            confirmPassword: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'confirm_password_input',\n                    type: 'password',\n                    placeholder: 'Confirm your password'\n                },\n                validation:{\n                    required: true,\n                    confirm: 'password'\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            }\n        }\n    }\n\n    updateForm = (element) => {\n        const newFormdata = update(element,this.state.formdata,'register');\n        this.setState({\n            formError: false,\n            formdata: newFormdata\n        })\n    }\n\n    submitForm= (event) =>{\n        event.preventDefault();\n        \n        let dataToSubmit = generateData(this.state.formdata,'register');\n        let formIsValid = isFormValid(this.state.formdata,'register')\n\n        if(formIsValid){\n            this.props.dispatch(registerUser(dataToSubmit))\n            .then(response =>{ \n                if(response.payload.success){\n                    this.setState({\n                        formError: false,\n                        formSuccess: true\n                    });\n                    setTimeout(()=>{\n                        this.props.history.push('/register_login');\n                    },3000)\n                } else {\n                    this.setState({formError: true})\n                }\n            }).catch(e => {\n                this.setState({formError: true})\n            })\n        } else {\n            this.setState({\n                formError: true\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"page_wrapper\">\n                <div className=\"container\">\n                    <div className=\"register_login_container\">\n                        <div className=\"left\">\n                            <form onSubmit={(event)=>  this.submitForm(event)}>\n                            <h2>Personal information</h2>\n                                <div className=\"form_block_two\">\n                                    <div className=\"block\">\n                                        <FormField\n                                            id={'name'}\n                                            formdata={this.state.formdata.name}\n                                            change={(element)=> this.updateForm(element)}\n                                        />\n                                    </div>\n                                    <div className=\"block\">\n                                        <FormField\n                                            id={'lastname'}\n                                            formdata={this.state.formdata.lastname}\n                                            change={(element)=> this.updateForm(element)}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <FormField\n                                        id={'email'}\n                                        formdata={this.state.formdata.email}\n                                        change={(element)=> this.updateForm(element)}\n                                    />\n                                </div>\n                                <h2>Verify password</h2>\n                                <div className=\"form_block_two\">\n                                    <div className=\"block\">\n                                        <FormField\n                                            id={'password'}\n                                            formdata={this.state.formdata.password}\n                                            change={(element)=> this.updateForm(element)}\n                                        />\n                                    </div>\n                                    <div className=\"block\">\n                                        <FormField\n                                            id={'confirmPassword'}\n                                            formdata={this.state.formdata.confirmPassword}\n                                            change={(element)=> this.updateForm(element)}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    { this.state.formError ?\n                                        <div className=\"error_label\">\n                                            Please check your data\n                                        </div>\n                                    :null}\n                                    <button onClick={(event)=> this.submitForm(event)}>\n                                        Create an account\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>     \n\n                <Dialog open={this.state.formSuccess}>\n                    <div className=\"dialog_alert\">\n                        <div>Congratulations !!</div>\n                        <div>\n                            You will be redirected to the LOGIN in a couple seconds...\n                        </div>\n                    </div>\n                </Dialog>\n\n\n            </div>\n        );\n    }\n}\n\nexport default connect()(Register);\n","import React from 'react';\n\nconst PageTop = (props) => {\n    return (\n        <div className=\"page_top\">\n            <div className=\"container\">\n                {props.title}\n            </div>\n        </div>\n    );\n};\n\nexport default PageTop;","const frets = [\n    {\n        \"_id\": 20,\n        \"name\": 20\n    },\n    {\n        \"_id\": 21,\n        \"name\": 21\n    },\n    {\n        \"_id\": 22,\n        \"name\": 22\n    },\n    {\n        \"_id\": 24,\n        \"name\": 24\n    },\n]\n\nconst price = [\n    {\n        \"_id\":0,\n        \"name\":\"Any\",\n        \"array\":[]\n    },\n    {\n        \"_id\":1,\n        \"name\":\"$0 to $299\",\n        \"array\":[0,299]\n    },\n    {\n        \"_id\":2,\n        \"name\":\"$300 to $599\",\n        \"array\":[300,599]\n    },\n    {\n        \"_id\":3,\n        \"name\":\"$600 to $999\",\n        \"array\":[600,999]\n    },\n    {\n        \"_id\":4,\n        \"name\":\"$1000 to $1999\",\n        \"array\":[1000,1999]\n    },\n    {\n        \"_id\":5,\n        \"name\":\"More than $2000\",\n        \"array\":[2000,1500000]\n    }\n]\n\n\nexport {\n    frets,\n    price\n}","import React, { Component } from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport faAngleDown from '@fortawesome/fontawesome-free-solid/faAngleDown';\nimport faAngleUp from '@fortawesome/fontawesome-free-solid/faAngleUp';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Collapse from '@material-ui/core/Collapse';\n\n\nclass CollapseCheckbox extends Component {\n\n    state = {\n        open: false,\n        checked: []\n    }\n\n\n    componentDidMount(){\n        if(this.props.initState){\n            this.setState({\n                open: this.props.initState\n            })\n        }\n    }\n\n    handleClick = () => {\n        this.setState({open: !this.state.open})\n    }\n\n    handleAngle = () => (\n        this.state.open ?\n            <FontAwesomeIcon\n                icon={faAngleUp}\n                className=\"icon\"\n            />\n        : \n            <FontAwesomeIcon\n                icon={faAngleDown}\n                className=\"icon\"\n            />\n    )\n\n    renderList = () => (\n        this.props.list ?\n            this.props.list.map((value)=>(\n                <ListItem key={value._id} style={{padding:'10px 0'}}>\n                    <ListItemText primary={value.name}/>\n                    <ListItemSecondaryAction>\n                        <Checkbox\n                            color=\"primary\"\n                            onChange={this.handleToggle(value._id)}\n                            checked={this.state.checked.indexOf(value._id) !== -1}\n                        />\n                    </ListItemSecondaryAction>\n                </ListItem>\n            ))\n        :null\n    )\n\n\n    handleToggle = value => () => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if(currentIndex === -1){\n            newChecked.push(value)\n        } else{\n            newChecked.splice(currentIndex,1)\n        }\n\n        this.setState({\n            checked: newChecked\n        },()=>{\n            this.props.handleFilters(newChecked)\n        })\n\n    }\n\n    render() {\n        return (\n            <div className=\"collapse_items_wrapper\">\n                <List style={{borderBottom: '1px solid #dbdbdb'}}>\n                    <ListItem onClick={this.handleClick} style={{padding:'10px 23px 10px 0'}}>\n                        <ListItemText\n                            primary={this.props.title}\n                            className=\"collapse_title\"\n                        />\n                        {this.handleAngle()}\n                    </ListItem>\n                    <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            {this.renderList()}\n                        </List>\n                    </Collapse>\n                </List>\n            </div>\n        );\n    }\n}\n\nexport default CollapseCheckbox;","import React, { Component } from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport faAngleDown from '@fortawesome/fontawesome-free-solid/faAngleDown';\nimport faAngleUp from '@fortawesome/fontawesome-free-solid/faAngleUp';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nclass CollapseRadio extends Component {\n\n    state = {\n        open: false,\n        value:'0'\n    }\n\n    componentDidMount(){\n        if(this.props.initState){\n            this.setState({\n                open: this.props.initState\n            })\n        }\n    }\n\n\n    handleClick = () => {\n        this.setState({open: !this.state.open})\n    }\n\n    handleAngle = () => (\n        this.state.open ?\n            <FontAwesomeIcon\n                icon={faAngleUp}\n                className=\"icon\"\n            />\n        : \n            <FontAwesomeIcon\n                icon={faAngleDown}\n                className=\"icon\"\n            />\n    )\n\n    renderList = () => (\n        this.props.list ?\n            this.props.list.map( value =>(\n                <FormControlLabel\n                    key={value._id}\n                    value={`${value._id}`}\n                    control={<Radio/>}\n                    label={value.name}\n                />\n            ))\n        :null\n    )\n\n\n    handleChange = event => {\n        this.props.handleFilters(event.target.value)\n        this.setState({value: event.target.value})\n    }\n\n\n    render() {\n        return (\n            <div>\n                 <List style={{borderBottom: '1px solid #dbdbdb'}}>\n                    <ListItem onClick={this.handleClick} style={{padding:'10px 23px 10px 0'}}>\n                        <ListItemText\n                            primary={this.props.title}\n                            className=\"collapse_title\"\n                        />\n                        {this.handleAngle()}\n                    </ListItem>\n                    <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n\n                            <RadioGroup\n                                aria-label=\"prices\"\n                                name=\"prices\"\n                                value={this.state.value}\n                                onChange={this.handleChange}\n                            >\n                                { this.renderList() }\n                            </RadioGroup>\n\n                        </List>\n                    </Collapse>\n                </List>\n            </div>\n        );\n    }\n}\n\nexport default CollapseRadio;","import React from 'react';\nimport Card from '../utils/card';\n\nconst CardBlockShop = (props) => {\n\n    const renderCards = () => (\n        props.list ? \n            props.list.map(card=>(\n                <Card\n                    key={card._id}\n                    {...card}\n                    grid={props.grid}\n                />\n            ))\n        :null\n    )\n\n    return (\n        <div className=\"card_block_shop\">\n            <div>\n                <div>\n                    {props.list ?\n                        props.list.length === 0 ?\n                            <div className=\"no_result\">\n                                Sorry, no results\n                            </div>\n                        :null\n                    :null}\n                    { renderCards(props.list)}\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default CardBlockShop;","import React from 'react';\nimport CardBlockShop from '../utils/card_block_shop'; \n\nconst LoadmoreCards = (props) => {\n    return (\n        <div>\n            <div>\n                <CardBlockShop\n                    grid={props.grid}\n                    list={props.products}\n                />\n            </div>\n            {\n                props.size > 0 && props.size >= props.limit ?\n                    <div className=\"load_more_container\">\n                        <span onClick={()=> props.loadMore()}>\n                            Load More\n                        </span>\n                    </div>\n                :null\n            }\n            \n\n    \n        </div>\n    );\n};\n\nexport default LoadmoreCards;","import React, { Component } from 'react';\nimport PageTop from '../utils/page_top';\n\nimport { frets,price } from '../utils/Form/fixed_categories';\n\nimport { connect } from 'react-redux';\nimport { getProductsToShop ,getBrands, getWoods } from '../../actions/products_actions';\n\nimport CollapseCheckbox from '../utils/collapseCheckbox';\nimport CollapseRadio from '../utils/collapseRadio';\n\nimport LoadmoreCards from './loadmoreCards';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport faBars from '@fortawesome/fontawesome-free-solid/faBars';\nimport faTh from '@fortawesome/fontawesome-free-solid/faTh';\n\n\nclass Shop extends Component {\n\n    state = {\n        grid:'',\n        limit:6,\n        skip:0,\n        filters:{\n            brand:[],\n            frets:[],\n            wood:[],\n            price:[]\n        }\n    }\n\n    componentDidMount(){\n        this.props.dispatch(getBrands());\n        this.props.dispatch(getWoods());\n\n        this.props.dispatch(getProductsToShop(\n            this.state.skip,\n            this.state.limit,\n            this.state.filters\n        ))\n    }\n\n    handlePrice = (value) => {\n        const data = price;\n        let array = [];\n\n        for(let key in data){\n            if(data[key]._id === parseInt(value,10)){\n                array = data[key].array\n            }\n        }\n        return array;\n    }\n\n\n    handleFilters = (filters,category) => {\n       const newFilters = {...this.state.filters}\n       newFilters[category] = filters;\n\n        if(category === \"price\"){\n            let priceValues = this.handlePrice(filters);\n            newFilters[category] = priceValues\n        }\n\n       this.showFilteredResults(newFilters)\n       this.setState({\n           filters: newFilters\n       })\n    }\n\n    showFilteredResults = (filters) =>{\n        this.props.dispatch(getProductsToShop(\n            0,\n            this.state.limit,\n            filters\n        )).then(()=>{\n            this.setState({\n                skip:0\n            })\n        })\n    }\n\n    loadMoreCards = () => {\n        let skip = this.state.skip + this.state.limit;\n\n        this.props.dispatch(getProductsToShop(\n            skip,\n            this.state.limit,\n            this.state.filters,\n            this.props.products.toShop\n        )).then(()=>{\n            this.setState({\n                skip\n            })\n        })\n    }\n\n    handleGrid= () =>{\n        this.setState({\n            grid: !this.state.grid ? 'grid_bars':''\n        })\n    }\n\n\n    render() {\n        const products = this.props.products;\n        return (\n            <div>\n                <PageTop\n                    title=\"Browse Products\"\n                />\n                <div className=\"container\">\n                    <div className=\"shop_wrapper\">\n                        <div className=\"left\">\n                            <CollapseCheckbox\n                                initState={true}\n                                title=\"Brands\"\n                                list={products.brands}\n                                handleFilters={(filters)=> this.handleFilters(filters,'brand')}\n                            />\n                             <CollapseCheckbox\n                                initState={false}\n                                title=\"Frets\"\n                                list={frets}\n                                handleFilters={(filters)=> this.handleFilters(filters,'frets')}\n                            />\n                            <CollapseCheckbox\n                                initState={false}\n                                title=\"Wood\"\n                                list={products.woods}\n                                handleFilters={(filters)=> this.handleFilters(filters,'wood')}\n                            />\n                             <CollapseRadio\n                                initState={true}\n                                title=\"Price\"\n                                list={price}\n                                handleFilters={(filters)=> this.handleFilters(filters,'price')}\n                            />\n                           \n                        </div>\n                        <div className=\"right\">\n                            <div className=\"shop_options\">\n                                <div className=\"shop_grids clear\">\n                                    <div\n                                        className={`grid_btn ${this.state.grid?'':'active'}`}\n                                        onClick={()=> this.handleGrid()}\n                                    >\n                                        <FontAwesomeIcon icon={faTh}/>\n                                    </div>\n                                    <div\n                                        className={`grid_btn ${!this.state.grid?'':'active'}`}\n                                        onClick={()=> this.handleGrid()}\n                                    >\n                                        <FontAwesomeIcon icon={faBars}/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div style={{clear:'both'}}>\n                                <LoadmoreCards\n                                    grid={this.state.grid}\n                                    limit={this.state.limit}\n                                    size={products.toShopSize}\n                                    products={products.toShop}\n                                    loadMore={()=> this.loadMoreCards()}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products\n    }\n}\n\nexport default connect(mapStateToProps)(Shop);","import React from 'react';\nimport MyButton from '../utils/button';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport faTruck from '@fortawesome/fontawesome-free-solid/faTruck';\nimport faCheck from '@fortawesome/fontawesome-free-solid/faCheck';\nimport faTimes from '@fortawesome/fontawesome-free-solid/faTimes';\n\nconst ProdNfo = (props) => {\n\n    const showProdTags = (detail) => (\n        <div className=\"product_tags\">\n            { detail.shipping ?\n                <div className=\"tag\">\n                    <div><FontAwesomeIcon icon={faTruck}/></div>\n                    <div className=\"tag_text\">\n                        <div>Free shipping</div>\n                        <div>And return</div>\n                    </div>\n                </div>\n            :null\n            }\n            { detail.available ?\n                <div className=\"tag\">\n                    <div><FontAwesomeIcon icon={faCheck}/></div>\n                    <div className=\"tag_text\">\n                        <div>Available</div>\n                        <div>in store</div>\n                    </div>\n                </div>\n            :\n                <div className=\"tag\">\n                    <div><FontAwesomeIcon icon={faTimes}/></div>\n                    <div className=\"tag_text\">\n                        <div>Not Available</div>\n                        <div>Preorder only</div>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n\n    const showProdActions = (detail) => (\n        <div className=\"product_actions\">\n            <div className=\"price\">$ { detail.price }</div>\n            <div className=\"cart\">\n                <MyButton\n                    type=\"add_to_cart_link\"\n                    runAction={()=>{\n                       props.addToCart(detail._id)\n                    }}\n                />\n            </div>\n        </div>\n    )\n\n    const showProdSpecifications = (detail) => (\n        <div className=\"product_specifications\">\n            <h2>Specs:</h2>\n            <div>\n                <div className=\"item\">\n                    <strong>Frets:</strong> {detail.frets}\n                </div>\n                <div className=\"item\">\n                    <strong>Wood:</strong> {detail.wood.name}\n                </div>\n            </div>\n        </div>\n    )\n\n\n    const detail = props.detail;\n    return (\n        <div>\n            <h1>{detail.brand.name} {detail.name}</h1>\n            <p>\n                {detail.description}\n            </p>\n            { showProdTags(detail)}\n            { showProdActions(detail)}\n            { showProdSpecifications(detail)}\n        </div>\n    );\n};\n\nexport default ProdNfo;","import React, { Component } from 'react';\n // import Lightbox from 'react-images';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\n\nclass ImageLightBox extends Component {\n\n    state = {\n        lightboxIsOpen: true,\n        currentImage: this.props.pos,\n        images:[]\n    }\n\n    static getDerivedStateFromProps(props){\n        if(props.images){\n\n            const images = [];\n            props.images.forEach(element=>{\n                images.push({src:`${element}`})\n            });\n            return {\n                images : images\n            }\n        }\n         return false\n\n    }\n\n    gotoPrevious = () => {\n        this.setState({\n            currentImage: this.state.currentImage -1\n        })\n    }\n\n    gotoNext = () => {\n        this.setState({\n            currentImage: this.state.currentImage +1\n        })\n    }\n\n    closeLightbox = () => {\n        this.props.onclose();\n    }\n\n    render() {\n\n        const {currentImage,images} = this.state\n\n        return (\n                <Lightbox\n                     mainSrc={images[currentImage].src}\n                     nextSrc={images[(currentImage ) % images.length+1 ]}\n                     prevSrc={images[(currentImage ) % images.length-1]}\n                     onCloseRequest={()=>this.closeLightbox()}\n                     onMovePrevRequest={()=> this.gotoPrevious() }\n                     onMoveNextRequest={()=> this.gotoNext()}\n                />\n        );\n    }\n}\n\nexport default ImageLightBox;","import React, { Component } from 'react';\nimport ImageLightBox from '../utils/lightbox';\n\n\nclass ProdImg extends Component {\n\n    state = {\n        lightbox: false,\n        imagePos:0,\n        lightboxImages:[]\n    }\n\n\n\n    componentDidMount(){\n        if(this.props.detail.images.length > 0){\n            let lightboxImages = [];\n\n            this.props.detail.images.forEach(item=>{\n                lightboxImages.push(item.url)\n            })\n\n            this.setState({\n                lightboxImages\n            })\n        }\n    }\n\n\n    handleLightBox = (pos) => {\n        if(this.state.lightboxImages.length > 0){\n            this.setState({\n                lightbox: true,\n                imagePos: pos\n            })\n        }\n    }\n\n    handleLightBoxClose = () => {\n        this.setState({\n            lightbox: false\n        })\n    }\n\n\n    showThumbs = () => (\n        this.state.lightboxImages.map((item,i)=>(\n            i > 0 ?\n                <div\n                    key={i}\n                    onClick={()=> this.handleLightBox(i)}\n                    className=\"thumb\"\n                    style={{background: `url(${item}) no-repeat`}}\n                ></div>\n            :null\n        ))\n    )\n\n\n    renderCardImage = (images) => {\n        if(images.length > 0){\n            return images[0].url\n        }else{\n            return `/images/image_not_availble.png`\n        }\n    }\n\n    render() {\n        const {detail} = this.props;\n        return (\n            <div className=\"product_image_container\">\n                <div className=\"main_pic\">\n                    <div\n                        style={{background:`url(${this.renderCardImage(detail.images)}) no-repeat`}} \n                        onClick={()=> this.handleLightBox(0)}\n                    >\n                    </div>\n                </div>\n                <div className=\"main_thumbs\">\n                    { this.showThumbs(detail)}\n                </div>\n                {\n                    this.state.lightbox ?\n                        <ImageLightBox\n                            id={detail.id}\n                            images={this.state.lightboxImages}\n                            open={this.state.open}\n                            pos={this.state.imagePos}\n                            onclose={()=> this.handleLightBoxClose()}\n                        />\n                    :null\n                }\n            </div>\n        );\n    }\n}\n\nexport default ProdImg;","import React, { Component } from 'react';\nimport PageTop from '../utils/page_top';\n\nimport ProdNfo from './prodNfo';\nimport ProdImg from './prodImg';\n\nimport { connect } from 'react-redux';\nimport { addToCart } from '../../actions/user_actions';\nimport { getProductDetail, clearProductDetail } from '../../actions/products_actions';\n\nclass ProductPage extends Component {\n\n    componentDidMount(){\n        const id = this.props.match.params.id;\n        this.props.dispatch(getProductDetail(id)).then(()=>{\n            if(!this.props.products.prodDetail){\n                this.props.history.push('/');\n            }\n        })\n    }\n\n    componentWillUnmount(){\n        this.props.dispatch(clearProductDetail())\n    }\n\n\n    addToCartHandler(id){\n        this.props.dispatch(addToCart(id))\n    }\n    \n    render() {\n        return (\n            <div>\n                <PageTop\n                    title=\"Product detail\"\n                />\n                <div className=\"container\">\n                {\n                    this.props.products.prodDetail ?\n                    <div className=\"product_detail_wrapper\">\n                        <div className=\"left\">\n                            <div style={{width:'500px'}}>\n                                <ProdImg\n                                    detail={this.props.products.prodDetail}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"right\">\n                            <ProdNfo\n                                addToCart={(id)=> this.addToCartHandler(id)}\n                                detail={this.props.products.prodDetail}\n                            />\n                        </div>\n                    </div>\n                    : 'Loading'\n                }\n\n                </div>                \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products\n    }\n}\n\nexport default connect(mapStateToProps)(ProductPage);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst links = [\n    {\n        name: 'My account',\n        linkTo: '/user/dashboard'\n    },\n    {\n        name: 'User information',\n        linkTo: '/user/user_profile'\n    },\n    {\n        name: 'My Cart',\n        linkTo: '/user/cart'\n    },\n]\n\nconst admin = [\n    {\n        name: 'Site info',\n        linkTo: '/admin/site_info'\n    },\n    {\n        name: 'Add products',\n        linkTo: '/admin/add_product'\n    },\n    {\n        name: 'Manage categories',\n        linkTo: '/admin/manage_categories'\n    }\n]\n\n\nconst UserLayout = (props) => {\n\n    const generateLinks = (links) => (\n        links.map((item,i)=>(\n            <Link to={item.linkTo} key={i}>\n                {item.name}\n            </Link>\n        ))\n    )\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"user_container\">\n                <div className=\"user_left_nav\">\n                    <h2>My account</h2>\n                    <div className=\"links\">\n                        { generateLinks(links)}\n                    </div>\n                    { props.user.userData.isAdmin ?\n                        <div>\n                            <h2>Admin</h2>\n                            <div className=\"links\">\n                                { generateLinks(admin)}\n                            </div>\n                        </div>\n                    :null\n                    }\n\n                </div>\n                <div className=\"user_right\">\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n}\n\n\nexport default connect(mapStateToProps)(UserLayout);","import React from 'react';\nimport moment from 'moment';\n\nconst UserHistoryBlock = (props) => {\n\n\n    const renderBlocks = () => (\n        props.products ?\n            props.products.map((product,i)=>(\n                <tr key={i}>\n                    <td>{moment(product.dateOfPurchase).format(\"MM-DD-YYYY\")}</td>\n                    <td>{product.brand} {product.name}</td>\n                    <td>$ {product.price}</td>\n                    <td>{product.quantity}</td>\n                </tr>\n            ))\n        :null\n    )\n\n    return (\n        <div className=\"history_blocks\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Date of purchase</th>\n                        <th>Product</th>\n                        <th>Price paid</th>\n                        <th>Quantity</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderBlocks()}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default UserHistoryBlock;","import React from 'react';\nimport UserLayout from '../../hoc/user';\nimport MyButton from '../utils/button';\nimport UserHistoryBlock from '../utils/User/history_block';\n\nconst UserDashboard = ({user}) => {\n    return (\n        <UserLayout>\n            <div>\n                \n                <div className=\"user_nfo_panel\">\n                    <h1>User information</h1>\n                    <div>\n                        <span>{user.userData.name}</span>\n                        <span>{user.userData.lastname}</span>\n                        <span>{user.userData.email}</span>\n                    </div>\n                    <MyButton\n                        type=\"default\"\n                        title=\"Edit account info\"\n                        linkTo=\"/user/user_profile\"\n                    />\n                </div>\n\n                {\n                    user.userData.history ?\n                    <div className=\"user_nfo_panel\">\n                        <h1>History purchases</h1>\n                        <div className=\"user_product_block_wrapper\">\n                            <UserHistoryBlock\n                                products={user.userData.history}\n                            />\n                        </div>            \n                    </div>\n\n                    :null\n                }\n                \n                \n            </div>\n        </UserLayout>\n        \n    );\n};\n\nexport default UserDashboard;","import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport faPlusCircle from '@fortawesome/fontawesome-free-solid/faPlusCircle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Fileupload extends Component {\n    constructor(){\n        super();\n        this.state = {\n            uploadedFiles:[],\n            uploading:false\n        }\n    }\n\n    onDrop = (files) => {\n       this.setState({uploading:true});\n       let formData = new FormData();\n       const config = {\n           header: {'content-type':'multipart/form-data'}\n       }\n       formData.append(\"file\",files[0]);\n\n       axios.post('/api/users/uploadimage',formData,config)\n       .then(response => {\n\n            console.log(response.data)\n\n            this.setState({\n                uploading:false,\n                uploadedFiles:[\n                    ...this.state.uploadedFiles,\n                    response.data\n                ]\n            },()=>{\n                this.props.imagesHandler(this.state.uploadedFiles)\n            })\n       });\n    }\n\n    onRemove = (id) => {\n        axios.get(`/api/users/removeimage?public_id=${id}`).then(response=>{\n            let images = this.state.uploadedFiles.filter(item=>{\n                return item.public_id !== id;\n            });\n\n            this.setState({\n                uploadedFiles: images\n            },()=>{\n                this.props.imagesHandler(images)\n            })\n        })\n    }\n\n    showUploadedImages = () => (\n        this.state.uploadedFiles.map(item=>(\n            <div className=\"dropzone_box\"\n                key={item.public_id}\n                onClick={()=> this.onRemove(item.public_id)}\n            >\n                <div \n                    className=\"wrap\"\n                    style={{background:`url(${item.url}) no-repeat`}}\n                >\n                </div>\n            </div>\n        ))\n    )\n\n    static getDerivedStateFromProps(props,state){\n        if(props.reset){\n            return state = {\n                uploadedFiles:[]\n            }\n        }\n        return null;\n    }\n\n\n    render() {\n        return (\n            <div>\n                <section>\n                    <div className=\"dropzone clear\">\n                        <Dropzone\n                            onDrop={(e)=>this.onDrop(e)}\n                            multiple={false}\n                            className=\"dropzone_box\"\n                        >\n                            {({getRootProps, getInputProps}) => (\n                                <div  {...getRootProps()}>\n\n                                    <input {...getInputProps()}  />\n                                    <FontAwesomeIcon className=\"wrap\"   icon={faPlusCircle}/>\n\n                                </div>\n                            )}\n                        </Dropzone>\n                        { this.showUploadedImages()}\n                        {\n                            this.state.uploading ?\n                            <div className=\"dropzone_box\" style={{\n                                textAlign: 'center',\n                                paddingTop: '60px'\n                            }}>\n                                <CircularProgress\n                                    style={{color:'#00bcd4'}}\n                                    thickness={7}\n                                />\n                            </div>\n                            :null\n                        }\n\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default Fileupload;","import React, { Component } from 'react';\nimport UserLayout from '../../../hoc/user';\n\nimport FormField from '../../utils/Form/formfield';\nimport { update, generateData, isFormValid, populateOptionFields,resetFields} from '../../utils/Form/formActions';\nimport FileUpload from '../../utils/Form/fileupload';\n\nimport { connect } from 'react-redux';\nimport { getBrands, getWoods,addProduct, clearProduct } from '../../../actions/products_actions';\n\n\nclass AddProduct extends Component {\n\n    state = {\n        formError:false,\n        formSuccess:false,\n        formdata:{\n            name: {\n                element: 'input',\n                value: '',\n                config:{\n                    label: 'Product name',\n                    name: 'name_input',\n                    type: 'text',\n                    placeholder: 'Enter your name'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },\n            description: {\n                element: 'textarea',\n                value: '',\n                config:{\n                    label: 'Product description',\n                    name: 'description_input',\n                    type: 'text',\n                    placeholder: 'Enter your description'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },\n            price: {\n                element: 'input',\n                value: '',\n                config:{\n                    label: 'Product price',\n                    name: 'price_input',\n                    type: 'number',\n                    placeholder: 'Enter your price'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },\n            brand: {\n                element: 'select',\n                value: '',\n                config:{\n                    label: 'Product Brand',\n                    name: 'brands_input',\n                    options:[]\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },\n            shipping: {\n                element: 'select',\n                value: '',\n                config:{\n                    label: 'Shipping',\n                    name: 'shipping_input',\n                    options:[\n                        {key:true,value:'Yes'},\n                        {key:false,value:'No'},\n                    ]\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },\n            available: {\n                element: 'select',\n                value: '',\n                config:{\n                    label: 'Available, in stock',\n                    name: 'available_input',\n                    options:[\n                        {key:true,value:'Yes'},\n                        {key:false,value:'No'},\n                    ]\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },\n            wood: {\n                element: 'select',\n                value: '',\n                config:{\n                    label: 'Wood material',\n                    name: 'wood_input',\n                    options:[]\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },\n            frets: {\n                element: 'select',\n                value: '',\n                config:{\n                    label: 'Frets',\n                    name: 'frets_input',\n                    options:[\n                        {key:20,value:20},\n                        {key:21,value:21},\n                        {key:22,value:22},\n                        {key:24,value:24}\n                    ]\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },\n            publish: {\n                element: 'select',\n                value: '',\n                config:{\n                    label: 'Publish',\n                    name: 'publish_input',\n                    options:[\n                        {key:true,value:'Public'},\n                        {key:false,value:'Hidden'},\n                    ]\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },\n            images:{\n                value:[],\n                validation:{\n                    required: false\n                },\n                valid: true,\n                touched: false,\n                validationMessage:'',\n                showlabel: false\n            }\n        }\n    }\n\n\n    updateFields = (newFormdata) => {\n        this.setState({\n            formdata: newFormdata\n        })\n    }\n\n    updateForm = (element) => {\n        const newFormdata = update(element,this.state.formdata,'products');\n        this.setState({\n            formError: false,\n            formdata: newFormdata\n        })\n    }\n\n    resetFieldHandler = () => {\n        const newFormData = resetFields(this.state.formdata,'products');\n\n        this.setState({\n            formdata: newFormData,\n            formSuccess:true\n        });\n        setTimeout(()=>{\n            this.setState({\n                formSuccess: false\n            },()=>{\n                this.props.dispatch(clearProduct())\n            })\n        },3000)\n    }\n\n    submitForm= (event) =>{\n        event.preventDefault();\n        \n        let dataToSubmit = generateData(this.state.formdata,'products');\n        let formIsValid = isFormValid(this.state.formdata,'products')\n\n        if(formIsValid){\n            this.props.dispatch(addProduct(dataToSubmit)).then(()=>{\n                if( this.props.products.addProduct.success){\n                    this.resetFieldHandler();\n                }else{\n                    this.setState({formError: true})\n                }\n            })\n        } else {\n            this.setState({\n                formError: true\n            })\n        }\n    }\n\n\n    componentDidMount(){\n        const formdata = this.state.formdata;\n\n        this.props.dispatch(getBrands()).then( response => {\n            const newFormData = populateOptionFields(formdata,this.props.products.brands,'brand');\n            this.updateFields(newFormData)\n        })\n\n        this.props.dispatch(getWoods()).then( response => {\n            const newFormData = populateOptionFields(formdata,this.props.products.woods,'wood');\n            this.updateFields(newFormData)\n        })\n    }\n\n    imagesHandler = (images) => {\n        const newFormData = {\n            ...this.state.formdata\n        }\n        newFormData['images'].value = images;\n        newFormData['images'].valid = true;\n\n        this.setState({\n            formdata:  newFormData\n        })\n    }\n\n    render() {\n        return (\n            <UserLayout>\n                <div>\n                    <h1>Add product</h1>\n                    \n                    <form onSubmit={(event)=> this.submitForm(event)}>\n\n                        <FileUpload\n                            imagesHandler={(images)=> this.imagesHandler(images)}\n                            reset={this.state.formSuccess}\n                        />\n\n                        <FormField\n                            id={'name'}\n                            formdata={this.state.formdata.name}\n                            change={(element) => this.updateForm(element)}\n                        />\n\n                         <FormField\n                            id={'description'}\n                            formdata={this.state.formdata.description}\n                            change={(element) => this.updateForm(element)}\n                        />\n\n                         <FormField\n                            id={'price'}\n                            formdata={this.state.formdata.price}\n                            change={(element) => this.updateForm(element)}\n                        />\n\n                        <div className=\"form_devider\"></div>\n\n                        <FormField\n                            id={'brand'}\n                            formdata={this.state.formdata.brand}\n                            change={(element) => this.updateForm(element)}\n                        />\n\n                        <FormField\n                            id={'shipping'}\n                            formdata={this.state.formdata.shipping}\n                            change={(element) => this.updateForm(element)}\n                        />\n\n                         <FormField\n                            id={'available'}\n                            formdata={this.state.formdata.available}\n                            change={(element) => this.updateForm(element)}\n                        />\n\n                        <div className=\"form_devider\"></div>\n\n                        <FormField\n                            id={'wood'}\n                            formdata={this.state.formdata.wood}\n                            change={(element) => this.updateForm(element)}\n                        />\n\n                        <FormField\n                            id={'frets'}\n                            formdata={this.state.formdata.frets}\n                            change={(element) => this.updateForm(element)}\n                        />\n\n                        <div className=\"form_devider\"></div>\n\n                        <FormField\n                            id={'publish'}\n                            formdata={this.state.formdata.publish}\n                            change={(element) => this.updateForm(element)}\n                        />\n\n                        {this.state.formSuccess ?\n                            <div className=\"form_success\">\n                                Success\n                            </div>\n                        :null}\n\n                        {this.state.formError ?\n                            <div className=\"error_label\">\n                                Please check your data\n                                        </div>\n                            : null}\n                        <button onClick={(event) => this.submitForm(event)}>\n                            Add product\n                        </button>\n\n\n                    </form>\n\n                </div>\n            </UserLayout>\n            \n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products\n    }\n}\n\n\nexport default connect(mapStateToProps)(AddProduct);","import React, { Component } from 'react';\n\nimport FormField from '../../utils/Form/formfield';\nimport { update, generateData, isFormValid,resetFields} from '../../utils/Form/formActions';\n\nimport { connect } from 'react-redux';\nimport { getBrands, addBrand } from '../../../actions/products_actions';\n\nclass ManageBrands extends Component {\n\n    state = {\n        formError:false,\n        formSuccess:false,\n        formdata:{\n            name: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'name_input',\n                    type: 'text',\n                    placeholder: 'Enter the brand'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            },\n        }\n    }\n\n    showCategoryItems = () => (\n        this.props.products.brands ?\n            this.props.products.brands.map((item,i)=>(\n                <div className=\"category_item\" key={item._id}>\n                    {item.name}\n                </div>\n            ))\n        :null\n    )\n\n    updateForm = (element) => {\n        const newFormdata = update(element,this.state.formdata,'brands');\n        this.setState({\n            formError: false,\n            formdata: newFormdata\n        });\n    }\n\n    resetFieldsHandler = () =>{\n        const newFormData = resetFields(this.state.formdata,'brands');\n\n        this.setState({\n            formdata: newFormData,\n            formSuccess:true\n        });\n    }\n\n  \n    submitForm= (event) =>{\n        event.preventDefault();\n        \n        let dataToSubmit = generateData(this.state.formdata,'brands');\n        let formIsValid = isFormValid(this.state.formdata,'brands')\n        let existingBrands = this.props.products.brands;\n\n        if(formIsValid){\n           this.props.dispatch(addBrand(dataToSubmit,existingBrands)).then(response=>{\n                if(response.payload.success){\n                    this.resetFieldsHandler();\n                }else{\n                    this.setState({formError:true})\n                }\n           })\n        } else {\n            this.setState({\n                formError: true\n            })\n        }\n    }\n\n    componentDidMount(){\n        this.props.dispatch(getBrands());\n    }\n\n\n    render() {\n        return (\n            <div className=\"admin_category_wrapper\">\n                <h1>Brands</h1>\n                <div className=\"admin_two_column\">\n                    <div className=\"left\">\n                        <div className=\"brands_container\">\n                            {this.showCategoryItems()}\n                        </div>\n                    </div>\n                    <div className=\"right\">\n                        \n                    <form onSubmit={(event)=> this.submitForm(event)}>\n\n                         <FormField\n                            id={'name'}\n                            formdata={this.state.formdata.name}\n                            change={(element) => this.updateForm(element)}\n                        />\n\n\n                        {this.state.formError ?\n                            <div className=\"error_label\">\n                                Please check your data\n                            </div>\n                            : null}\n                        <button onClick={(event) => this.submitForm(event)}>\n                            Add brand\n                        </button>\n\n                    </form>\n\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products\n    }\n}\n\nexport default connect(mapStateToProps)(ManageBrands);","import React, { Component } from 'react';\n\nimport FormField from '../../utils/Form/formfield';\nimport { update, generateData, isFormValid,resetFields} from '../../utils/Form/formActions';\n\nimport { connect } from 'react-redux';\nimport { getWoods,addWood } from '../../../actions/products_actions';\n\nclass ManageWoods extends Component {\n\n    state = {\n        formError:false,\n        formSuccess:false,\n        formdata:{\n            name: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'name_input',\n                    type: 'text',\n                    placeholder: 'Enter the wood'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            },\n        }\n    }\n\n    showCategoryItems = () => (\n        this.props.products.woods ?\n            this.props.products.woods.map((item,i)=>(\n                <div className=\"category_item\" key={item._id}>\n                    {item.name}\n                </div>\n            ))\n        :null\n    )\n\n    updateForm = (element) => {\n        const newFormdata = update(element,this.state.formdata,'woods');\n        this.setState({\n            formError: false,\n            formdata: newFormdata\n        });\n    }\n\n    resetFieldsHandler = () =>{\n        const newFormData = resetFields(this.state.formdata,'woods');\n\n        this.setState({\n            formdata: newFormData,\n            formSuccess:true\n        });\n    }\n\n    submitForm= (event) =>{\n        event.preventDefault();\n        \n        let dataToSubmit = generateData(this.state.formdata,'woods');\n        let formIsValid = isFormValid(this.state.formdata,'woods')\n        let existingWoods = this.props.products.woods;\n\n        if(formIsValid){\n            this.props.dispatch(addWood(dataToSubmit,existingWoods)).then(response=>{\n                if(response.payload.success){\n                    this.resetFieldsHandler();\n                }else{\n                    this.setState({formError:true})\n                }\n            })\n        } else {\n            this.setState({\n                formError: true\n            })\n        }\n    }\n\n\n    componentDidMount(){\n        this.props.dispatch(getWoods());\n    }\n\n\n    render() {\n        return (\n            <div className=\"admin_category_wrapper\">\n            <h1>Woods</h1>\n            <div className=\"admin_two_column\">\n                <div className=\"left\">\n                    <div className=\"brands_container\">\n                        {this.showCategoryItems()}\n                    </div>\n                </div>\n                <div className=\"right\">\n                    \n                <form onSubmit={(event)=> this.submitForm(event)}>\n\n                     <FormField\n                        id={'name'}\n                        formdata={this.state.formdata.name}\n                        change={(element) => this.updateForm(element)}\n                    />\n\n\n                    {this.state.formError ?\n                        <div className=\"error_label\">\n                            Please check your data\n                        </div>\n                        : null}\n                    <button onClick={(event) => this.submitForm(event)}>\n                        Add wood\n                    </button>\n\n                </form>\n\n                </div>\n\n            </div>\n        </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products\n    }\n}\n\n\nexport default connect(mapStateToProps)(ManageWoods);\n","import React from 'react';\nimport UserLayout from '../../../hoc/user';\nimport ManageBrands from './manage_brands';\nimport ManageWoods from './manage_woods';\n\nconst ManageCategories = () => {\n    return (\n        <UserLayout>\n            <ManageBrands/>\n            <ManageWoods/>\n        </UserLayout>\n    );\n};\n\nexport default ManageCategories;","import React from 'react';\n\nconst UserProductBlock = ({products,removeItem}) => {\n\n    const renderCartImage = (images) => {\n        if(images.length > 0){\n            return images[0].url\n        } else {\n            return '/images/image_not_availble.png'\n        }\n    }\n\n\n    const renderItems = () => (\n        products.cartDetail ?\n            products.cartDetail.map(product=>(\n                <div className=\"user_product_block\" key={product._id}>\n                    <div className=\"item\">\n                        <div\n                            className=\"image\"\n                            style={{background:`url(${renderCartImage(product.images)}) no-repeat`}}\n                        ></div>\n                    </div>\n                    <div className=\"item\">\n                        <h4>Product name</h4>\n                        <div>\n                            {product.brand.name} {product.name}\n                        </div>\n                    </div>\n                    <div className=\"item\">\n                        <h4>Quantity</h4>\n                        <div>\n                            {product.quantity}\n                        </div>\n                    </div>\n                    <div className=\"item\">\n                        <h4>Price</h4>\n                        <div>\n                           $ {product.price}\n                        </div>\n                    </div>\n                    <div className=\"item btn\">\n                       <div className=\"cart_remove_btn\" \n                            onClick={()=> removeItem(product._id)}>\n                            Remove\n                       </div>\n                    </div>\n                </div>\n            ))\n\n        :null\n    )\n\n\n    return (\n        <div>\n            {renderItems()}\n        </div>\n    );\n};\n\nexport default UserProductBlock;","import React, { Component } from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\n\nclass Paypal extends Component {\n    render() {\n\n        const onSuccess = (payment) =>{ \n            //console.log(JSON.stringify(payment));\n            this.props.onSuccess(payment);\n\n             // { \n            //     \"paid\": true, \n            //     \"cancelled\": false, \n            //     \"payerID\": \"3GFGQ6GNJ4PWA\", \n            //     \"paymentID\": \"PAY-0UB74233TB278434KLMYYMVY\", \n            //     \"paymentToken\": \"EC-2J270753AK460261B\", \n            //     \"returnUrl\": \"https://www.sandbox.paypal.com/?paymentId=PAY-0UB74233TB278434KLMYYMVY&token=EC-2J270753AK460261B&PayerID=3GFGQ6GNJ4PWA\", \n            //     \"address\": { \n            //         \"recipient_name\": \"test buyer\", \n            //         \"line1\": \"1 Main St\", \n            //         \"city\": \"San Jose\", \n            //         \"state\": \"CA\", \n            //         \"postal_code\": \"95131\", \n            //         \"country_code\": \"US\" \n            //     }, \n            //     \"email\": \"fernando.lobo.prez-buyer@gmail.com\" \n            // }\n\n\n        }\n\n        const onCancel = (data) =>{\n            console.log(JSON.stringify(data))\n        }\n\n        const onError = (err) => {\n            console.log(JSON.stringify(err))\n        }\n\n        let env = 'sandbox';\n        let currency = 'USD';\n        let total = this.props.toPay;\n\n        const client = {\n            sandbox:'AfbA2-qjz92KhC5IDxvx2UpiIDBmSD7PdlKkZk1-OndNwg7Wc5wVAJKlPWQJcHwioMFz0kn4zOXnbqGW',\n            production:''\n        }\n        \n       \n\n        \n        return (\n            <div>\n                <PaypalExpressBtn\n                    env={env}\n                    client={client}\n                    currency={currency}\n                    total={total}\n                    onError={onError}\n                    onSuccess={onSuccess}\n                    onCancel={onCancel}\n                    style={{\n                        size:'large',\n                        color: 'blue',\n                        shape: 'rect',\n                        label: 'checkout'\n                    }}\n                \n                />\n            </div>\n        );\n    }\n}\n\nexport default Paypal;","import React, { Component } from 'react';\nimport UserLayout from '../../hoc/user';\nimport UserProductBlock from '../utils/User/product_block';\n\nimport { connect } from 'react-redux';\nimport { getCartItems, removeCartItem ,onSuccessBuy} from '../../actions/user_actions';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport faFrown from '@fortawesome/fontawesome-free-solid/faFrown'\nimport faSmile from '@fortawesome/fontawesome-free-solid/faSmile'\n\n/// AfbA2-qjz92KhC5IDxvx2UpiIDBmSD7PdlKkZk1-OndNwg7Wc5wVAJKlPWQJcHwioMFz0kn4zOXnbqGW\n\nimport Paypal from '../utils/paypal';\n\nclass UserCart extends Component {\n\n    state = {\n        loading: true,\n        total:0,\n        showTotal: false,\n        showSuccess: false,\n    }\n\n    componentDidMount(){\n        let cartItems = [];\n        let user = this.props.user;\n\n        if(user.userData.cart){\n            if(user.userData.cart.length > 0){\n                user.userData.cart.forEach(item=>{\n                    cartItems.push(item.id)\n                });\n                this.props.dispatch(getCartItems(cartItems,user.userData.cart))\n                .then(()=>{\n                    if(this.props.user.cartDetail.length > 0){\n                        this.calculateTotal(this.props.user.cartDetail);\n                    }\n                })\n            }\n        }\n    }\n\n    calculateTotal = (cartDetail) => {\n        let total = 0;\n\n        cartDetail.forEach(item=>{\n            total += parseInt(item.price, 10) * item.quantity\n        });\n\n        this.setState({\n            total,\n            showTotal: true\n        });\n    }\n\n\n    removeFromCart = (id) => {\n        this.props.dispatch(removeCartItem(id))\n        .then(()=>{\n            if(this.props.user.cartDetail.length <= 0){\n                this.setState({\n                    showTotal: false\n                })\n            } else{\n                this.calculateTotal(this.props.user.cartDetail)\n            }\n        })\n    }\n\n    showNoItemMessage = () =>(\n        <div className=\"cart_no_items\">\n            <FontAwesomeIcon icon={faFrown}/>\n            <div>\n                You have no items\n            </div>\n        </div>\n    )\n\n    transactionError = (data) => {\n        console.log('Paypal error')\n    }\n\n    transactionCanceled = () => {\n        console.log('Transaction cancled')\n    }\n\n    transactionSuccess = (data) => {\n        this.props.dispatch(onSuccessBuy({\n            cartDetail: this.props.user.cartDetail,\n            paymentData: data\n        })).then(()=>{\n            if(this.props.user.successBuy){\n                this.setState({\n                    showTotal: false,\n                    showSuccess: true\n                })\n            }\n        })\n    }\n\n    render() {\n        return (\n            <UserLayout>\n                <div>\n                    <h1>My cart</h1>\n                    <div className=\"user_cart\">\n                        <UserProductBlock\n                            products={this.props.user}\n                            type=\"cart\"\n                            removeItem={(id)=> this.removeFromCart(id)}\n                        />\n                        { this.state.showTotal ?\n                            <div>\n                                <div className=\"user_cart_sum\">\n                                    <div>\n                                        Total amount: $ {this.state.total}\n                                    </div>\n                                </div>\n                            </div>\n                            \n                        :\n                            this.state.showSuccess ?\n                                <div className=\"cart_success\">\n                                    <FontAwesomeIcon icon={faSmile}/>\n                                    <div>\n                                        THANK YOU\n                                    </div>\n                                    <div>\n                                        YOUR ORDER IS NOW COMPLETE\n                                    </div>\n                                </div>\n                            :\n                            this.showNoItemMessage()\n                        }\n                    </div>\n                    {\n                        this.state.showTotal ?\n                            <div className=\"paypal_button_container\">\n                                <Paypal\n                                    toPay={this.state.total}\n                                    transactionError={(data)=> this.transactionError(data)}\n                                    transactionCanceled={(data)=> this.transactionCanceled(data)}\n                                    onSuccess={(data)=> this.transactionSuccess(data)}\n                                />\n                            </div>\n                        :null\n\n                    }\n\n                </div>\n            </UserLayout>\n           \n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(UserCart);","import React, { Component } from 'react';\nimport FormField from '../utils/Form/formfield';\n\nimport { connect } from 'react-redux';\nimport { updateUserData, clearUpdateUser} from '../../actions/user_actions';\n\nimport { update, generateData, isFormValid, populateFields } from '../utils/Form/formActions';\n\nclass UpdatePersonalNfo extends Component {\n\n    state = {\n        formError: false,\n        formSuccess:false,\n        formdata:{\n            name: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'name_input',\n                    type: 'text',\n                    placeholder: 'Enter your name'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            },\n            lastname: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'lastname_input',\n                    type: 'text',\n                    placeholder: 'Enter your lastname'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            },\n            email: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'email_input',\n                    type: 'email',\n                    placeholder: 'Enter your email'\n                },\n                validation:{\n                    required: true,\n                    email: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            }\n        }\n    }\n\n\n    updateForm = (element) => {\n        const newFormdata = update(element,this.state.formdata,'update_user');\n        this.setState({\n            formError: false,\n            formdata: newFormdata\n        })\n    }\n\n    submitForm= (event) =>{\n        event.preventDefault();\n        \n        let dataToSubmit = generateData(this.state.formdata,'update_user');\n        let formIsValid = isFormValid(this.state.formdata,'update_user')\n\n        if(formIsValid){\n            this.props.dispatch(updateUserData(dataToSubmit)).then(()=>{\n                if(this.props.user.updateUser.success){\n                    this.setState({\n                        formSuccess: true\n                    },()=>{\n                        setTimeout(()=>{\n                            this.props.dispatch(clearUpdateUser());\n                            this.setState({\n                                formSuccess: false\n                            })\n                        },2000)\n                    })\n                }\n            })\n\n        } else {\n            this.setState({\n                formError: true\n            })\n        }\n    }\n\n    componentDidMount(){\n        const newFormData = populateFields(this.state.formdata,this.props.user.userData);\n        this.setState({\n            formdata: newFormData\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(event)=>  this.submitForm(event)}>\n                    <h2>Personal information</h2>\n                    <div className=\"form_block_two\">\n                        <div className=\"block\">\n                            <FormField\n                                id={'name'}\n                                formdata={this.state.formdata.name}\n                                change={(element) => this.updateForm(element)}\n                            />\n                        </div>\n                        <div className=\"block\">\n                            <FormField\n                                id={'lastname'}\n                                formdata={this.state.formdata.lastname}\n                                change={(element) => this.updateForm(element)}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <FormField\n                            id={'email'}\n                            formdata={this.state.formdata.email}\n                            change={(element) => this.updateForm(element)}\n                        />\n                    </div>\n                    <div>\n                        {\n                            this.state.formSuccess ?\n                            <div className=\"form_success\">Success</div>\n                            :null\n                        }\n                        {this.state.formError ?\n                            <div className=\"error_label\">\n                                Please check your data\n                            </div>\n                            : null}\n                        <button onClick={(event) => this.submitForm(event)}>\n                           Update personal info\n                        </button>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(UpdatePersonalNfo);","import React from 'react';\nimport UserLayout from '../../hoc/user';\nimport UpdatePersonalNfo from './update_personal_nfo';\n\nconst UpdateProfile = () => {\n    return (\n        <UserLayout>\n            <h1>Profile</h1>\n            <UpdatePersonalNfo/>\n        </UserLayout>\n    );\n};\n\nexport default UpdateProfile;","import React, { Component } from 'react';\n\nimport FormField from '../../utils/Form/formfield';\nimport { update, generateData, isFormValid,populateFields } from '../../utils/Form/formActions';\n\nimport { connect } from 'react-redux'\nimport { getSiteData, updateSiteData } from '../../../actions/site_actions';\n\nclass UpdateSiteNfo extends Component {\n\n    state = {\n        formError: false,\n        formSuccess:false,\n        formdata:{\n            address: {\n                element: 'input',\n                value: '',\n                config:{\n                    label:'Adresss',\n                    name: 'address_input',\n                    type: 'text',\n                    placeholder: 'Enter the site address'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },  \n            hours: {\n                element: 'input',\n                value: '',\n                config:{\n                    label:'Working hours',\n                    name: 'hours_input',\n                    type: 'text',\n                    placeholder: 'Enter the site working hours'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },  \n            phone: {\n                element: 'input',\n                value: '',\n                config:{\n                    label:'Phone number',\n                    name: 'phone_input',\n                    type: 'text',\n                    placeholder: 'Enter the phone number'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },  \n            email: {\n                element: 'input',\n                value: '',\n                config:{\n                    label:'Shop email',\n                    name: 'email_input',\n                    type: 'email',\n                    placeholder: 'Enter your email'\n                },\n                validation:{\n                    required: true,\n                    email: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:'',\n                showlabel: true\n            },  \n        }\n    }\n\n    updateForm = (element) => {\n        const newFormdata = update(element,this.state.formdata,'site_info');\n        this.setState({\n            formError: false,\n            formdata: newFormdata\n        })\n    }\n\n    submitForm= (event) =>{\n        event.preventDefault();\n        \n        let dataToSubmit = generateData(this.state.formdata,'site_info');\n        let formIsValid = isFormValid(this.state.formdata,'site_info')\n\n        if(formIsValid){\n            this.props.dispatch(updateSiteData(dataToSubmit)).then(()=>{\n                this.setState({\n                    formSuccess: true\n                },()=>{\n                    setTimeout(()=>{\n                        this.setState({\n                            formSuccess: false\n                        })\n                    },2000)\n                })\n            });\n        } else {\n            this.setState({\n                formError: true\n            })\n        }\n    }\n\n    componentDidMount(){\n        this.props.dispatch(getSiteData()).then(()=>{\n            const newFormData = populateFields(this.state.formdata,this.props.site.siteData[0]);\n            this.setState({\n                formdata: newFormData\n            });\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(event)=>  this.submitForm(event)}>\n                    <h1>Site info</h1>\n                    <FormField\n                        id={'address'}\n                        formdata={this.state.formdata.address}\n                        change={(element) => this.updateForm(element)}\n                    />\n\n                    <FormField\n                        id={'hours'}\n                        formdata={this.state.formdata.hours}\n                        change={(element) => this.updateForm(element)}\n                    />\n\n                    <FormField\n                        id={'phone'}\n                        formdata={this.state.formdata.phone}\n                        change={(element) => this.updateForm(element)}\n                    />\n\n                    <FormField\n                        id={'email'}\n                        formdata={this.state.formdata.email}\n                        change={(element) => this.updateForm(element)}\n                    />\n\n                    <div>\n                        {\n                            this.state.formSuccess ? \n                            <div className=\"form_success\">\n                                Success\n                            </div>\n                            :null\n                        }\n                        {this.state.formError ?\n                            <div className=\"error_label\">\n                                Please check your data\n                                        </div>\n                            : null}\n                        <button onClick={(event) => this.submitForm(event)}>\n                           Update\n                        </button>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        site: state.site\n    }\n}\n\nexport default connect(mapStateToProps)(UpdateSiteNfo);","import React from 'react';\nimport UserLayout from '../../../hoc/user';\nimport UpdateSiteNfo from './update_site_nfo';\n\nconst ManageSite = () => {\n    return (\n        <UserLayout>\n           <UpdateSiteNfo/>\n        </UserLayout>\n    );\n};\n\nexport default ManageSite;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Layout from './hoc/layout';\nimport Auth from './hoc/auth';\n\nimport Home from './components/Home';\nimport RegisterLogin from './components/Register_login';\nimport Register from './components/Register_login/register';\nimport Shop from './components/Shop';\nimport ProductPage from './components/Product';\n\nimport UserDashboard from './components/User';\nimport AddProduct from './components/User/Admin/add_product';\nimport ManageCategories from './components/User/Admin/manage_categories';\nimport UserCart from './components/User/cart';\nimport UpdateProfile from './components/User/update_profile';\nimport ManageSite from './components/User/Admin/manage_site';\n\nconst Routes = () => {\n  return(\n    <Layout>\n      <Switch>\n        <Route path=\"/user/dashboard\" exact component={Auth(UserDashboard,true)}/>\n        <Route path=\"/user/cart\" exact component={Auth(UserCart,true)}/>\n        <Route path=\"/user/user_profile\" exact component={Auth(UpdateProfile,true)}/>\n        <Route path=\"/admin/add_product\" exact component={Auth(AddProduct,true)}/>\n        <Route path=\"/admin/manage_categories\" exact component={Auth(ManageCategories,true)}/>\n        <Route path=\"/admin/site_info\" exact component={Auth(ManageSite,true)}/>\n\n\n        <Route path=\"/product_detail/:id\" exact component={Auth(ProductPage,null)}/>\n        <Route path=\"/register\" exact component={Auth(Register,false)}/>\n        <Route path=\"/register_login\" exact component={Auth(RegisterLogin,false)}/>\n        <Route path=\"/shop\" exact component={Auth(Shop,null)}/>\n        <Route path=\"/\" exact component={Auth(Home,null)}/>\n      </Switch>\n    </Layout>\n\n  )\n}\n\nexport default Routes;\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\nimport products from './products_reducer';\nimport site from './site_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n    products,\n    site\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART_USER,\n    GET_CART_ITEMS_USER,\n    REMOVE_CART_ITEM_USER,\n    ON_SUCCESS_BUY_USER,\n    UPDATE_DATA_USER,\n    CLEAR_UPDATE_USER_DATA\n} from '../actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        case ADD_TO_CART_USER:\n            return {...state, userData:{\n                ...state.userData,\n                cart: action.payload\n            }}\n        case GET_CART_ITEMS_USER:\n            return {...state,cartDetail: action.payload }\n        case REMOVE_CART_ITEM_USER:\n            return {\n                ...state,\n                cartDetail: action.payload.cartDetail,\n                userData:{\n                    ...state.userData,\n                    cart: action.payload.cart\n                }\n            }\n        case ON_SUCCESS_BUY_USER:\n            return {\n                ...state,\n                successBuy: action.payload.success,\n                userData:{\n                    ...state.userData,\n                    cart: action.payload.cart\n                },\n                cartDetail: action.payload.cartDetail\n            }\n        case UPDATE_DATA_USER:\n            return {...state,updateUser: action.payload}\n        case CLEAR_UPDATE_USER_DATA:\n            return {...state,updateUser: action.payload}\n        default:\n            return state;\n    }\n}","import {\n    GET_PRODUCTS_BY_SELL,\n    GET_PRODUCTS_BY_ARRIVAL,\n    GET_BRANDS,\n    ADD_BRAND,\n    GET_WOODS,\n    ADD_WOOD,\n    GET_PRODUCTS_TO_SHOP,\n    ADD_PRODUCT,\n    CLEAR_PRODUCT,\n    GET_PRODUCT_DETAIL,\n    CLEAR_PRODUCT_DETAIL\n} from '../actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case GET_PRODUCTS_BY_SELL:\n            return {...state, bySell: action.payload }\n        case GET_PRODUCTS_BY_ARRIVAL:\n            return {...state, byArrival:  action.payload }\n        case GET_BRANDS:\n            return {...state, brands: action.payload }\n        case ADD_BRAND:\n            return {\n                ...state, \n                addBrand: action.payload.success , \n                brands:action.payload.brands \n            }\n        case GET_WOODS:\n            return {...state, woods: action.payload }\n        case ADD_WOOD:\n            return {\n                ...state, \n                addWood: action.payload.success , \n                woods:action.payload.woods \n            }\n        case GET_PRODUCTS_TO_SHOP:\n            return {\n                ...state,\n                toShop: action.payload.articles,\n                toShopSize: action.payload.size\n            }\n        case ADD_PRODUCT:\n            return { ...state,addProduct: action.payload }\n        case CLEAR_PRODUCT:\n            return { ...state,addProduct: action.payload }\n        case GET_PRODUCT_DETAIL:\n            return {...state, prodDetail: action.payload }\n        case CLEAR_PRODUCT_DETAIL:\n            return {...state, prodDetail: action.payload }\n        default:\n            return state;\n    }\n}","import {\n    GET_SITE_DATA,\n    UPDATE_SITE_DATA\n} from '../actions/types';\n\nexport default function(state={},action){\n    switch(action.type){\n        case GET_SITE_DATA:\n            return { ...state, siteData: action.payload }\n        case UPDATE_SITE_DATA:\n            return { ...state, siteData: action.payload.siteInfo }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Resources/css/styles.css';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './routes';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nimport Reducer from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware,ReduxThunk)(createStore);\n\n\nReactDOM.render(\n    <Provider store={createStoreWithMiddleware(Reducer , window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())}>\n        <BrowserRouter>\n            <Routes />\n        </BrowserRouter>\n    </Provider>\n\n, document.getElementById('root'));\n\n"],"sourceRoot":""}